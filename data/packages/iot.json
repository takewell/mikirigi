{
  "keyword": "iot",
  "packages": [
    {
      "name": "serverless",
      "descriptions": "Serverless Framework - Build web, mobile and IoT applications with serverless architectures using AWS Lambda, Azure Functions, Google CloudFunctions & more",
      "keyword": [
        "serverless",
        "serverless framework",
        "serverless applications",
        "serverless modules",
        "api gateway",
        "lambda",
        "aws",
        "aws lambda",
        "amazon",
        "amazon web services",
        "azure",
        "azure functions",
        "google cloud functions",
        "apache open whisk",
        "View more"
      ],
      "author": "serverless-main"
    },
    {
      "name": "serialport",
      "descriptions": "Node.js package to access serial ports. Linux, OSX and Windows. Welcome your robotic JavaScript overlords. Better yet, program them!",
      "keyword": [
        "ccTalk",
        "com port",
        "data logging",
        "hardware",
        "iot",
        "johnny-five",
        "modem",
        "nodebots",
        "RFID",
        "robotics",
        "sensor",
        "serial port",
        "serial",
        "serialport",
        "View more"
      ],
      "author": "reconbot"
    },
    {
      "name": "node-red",
      "descriptions": "Low-code programming for event-driven applications",
      "keyword": [
        "editor",
        "messaging",
        "iot",
        "flow"
      ],
      "author": "knolleary"
    },
    {
      "name": "onoff",
      "descriptions": "GPIO access and interrupt detection with Node.js",
      "keyword": [
        "gpio",
        "iot",
        "interrupt",
        "raspberry",
        "raspi",
        "rpi",
        "pi",
        "beaglebone",
        "beaglebone-black",
        "linux"
      ],
      "author": "fivdi"
    },
    {
      "name": "aws-iot-device-sdk",
      "descriptions": "AWS IoT Node.js SDK for Embedded Devices",
      "keyword": [
        "api",
        "amazon",
        "aws",
        "iot",
        "mqtt"
      ],
      "author": "aws-iot-sdk"
    },
    {
      "name": "paho-mqtt",
      "descriptions": "Eclipse Paho JavaScript MQTT client for Browsers",
      "keyword": [
        "mqtt",
        "paho",
        "eclipse",
        "iot",
        "m2m"
      ],
      "author": "jpwsutton"
    },
    {
      "name": "node-ssdp",
      "descriptions": "A node.js SSDP client and server library.",
      "keyword": [
        "ssdp",
        "multicast",
        "media",
        "device",
        "upnp",
        "chromecast",
        "iot"
      ],
      "author": "diversario"
    },
    {
      "name": "cylon",
      "descriptions": "JavaScript framework for robotics, drones, and the Internet of Things (IoT) using Node.js",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "drones",
        "internet of things"
      ],
      "author": "deadprogram"
    },
    {
      "name": "i2c-bus",
      "descriptions": "I2C serial bus access with Node.js",
      "keyword": [
        "i2c",
        "iot",
        "raspberry",
        "raspi",
        "rpi",
        "pi",
        "beaglebone",
        "smbus",
        "linux"
      ],
      "author": "fivdi"
    },
    {
      "name": "coap",
      "descriptions": "A CoAP library for node modelled after 'http'",
      "keyword": [
        "coap",
        "m2m",
        "iot",
        "client",
        "server",
        "udp",
        "observe",
        "internet of things",
        "messaging"
      ],
      "author": "giedrius"
    },
    {
      "name": "@iobroker/adapter-core",
      "descriptions": "Core module to be used in ioBroker adapters. Acts as the bridge to js-controller.",
      "keyword": [
        "iobroker",
        "adapter",
        "iot"
      ],
      "author": "alcalzone"
    },
    {
      "name": "node-opcua",
      "descriptions": "Pure nodejs OPCUA SDK - module",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "pigpio",
      "descriptions": "Fast GPIO, PWM, servo control, state change notification, and interrupt handling on the Raspberry Pi",
      "keyword": [
        "gpio",
        "pwm",
        "servo",
        "iot",
        "interrupt",
        "raspberry",
        "raspi",
        "rpi",
        "pi"
      ],
      "author": "fivdi"
    },
    {
      "name": "total.js",
      "descriptions": "Web framework for Node.js",
      "keyword": [
        "total",
        "iot",
        "framework",
        "web",
        "websocket",
        "mvc",
        "controller",
        "view",
        "angular.js",
        "upload",
        "picture",
        "graphicsmagick",
        "imagemagick",
        "eshop",
        "View more"
      ],
      "author": "petersirka"
    },
    {
      "name": "meshblu",
      "descriptions": "Meshblu IoT network and API",
      "keyword": [
        "iot",
        "internet of things",
        "arduino",
        "tessel",
        "raspberrypi",
        "skynet",
        "meshblu"
      ],
      "author": "octoblu"
    },
    {
      "name": "@c8y/client",
      "descriptions": "Client application programming interface to access the Cumulocity IoT-Platform REST services.",
      "keyword": [
        "Cumulocity",
        "IoT",
        "m2m",
        "Client",
        "API",
        "REST",
        "fetch"
      ],
      "author": "c8y"
    },
    {
      "name": "huejay",
      "descriptions": "Philips Hue client for Node.js",
      "keyword": [
        "hue",
        "philips",
        "huejay",
        "client",
        "api",
        "iot"
      ],
      "author": "sqmk"
    },
    {
      "name": "iotdb",
      "descriptions": "IOTDB.org",
      "keyword": [
        "IOTDB",
        "IOT",
        "Internet",
        "Things",
        "Hardware",
        "Raspberry",
        "Pi",
        "Arduino",
        "Firmata"
      ],
      "author": "dpjanes"
    },
    {
      "name": "nitrogen",
      "descriptions": "Nitrogen is a platform for building connected devices. Nitrogen provides the authentication, authorization, and real time message passing framework so that you can focus on your device and application. All with a consistent development platform that lev",
      "keyword": [
        "devices",
        "iot",
        "nitrogen",
        "pi",
        "raspberry",
        "raspberry pi"
      ],
      "author": "tpark"
    },
    {
      "name": "node-opcua-assert",
      "descriptions": "Pure nodejs OPCUA SDK - module -assert",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-nodeid",
      "descriptions": "Pure nodejs OPCUA SDK - module -nodeid",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "@google-cloud/iot",
      "descriptions": "Cloud IoT API client for Node.js",
      "keyword": [
        "google apis client",
        "google api client",
        "google apis",
        "google api",
        "google",
        "google cloud platform",
        "google cloud",
        "cloud",
        "google iot",
        "iot",
        "Cloud IoT API"
      ],
      "author": "google-wombot"
    },
    {
      "name": "tuyapi",
      "descriptions": "An easy-to-use API for devices that use Tuya's cloud services",
      "keyword": [
        "tuya",
        "iot",
        "plug",
        "jinvoo",
        "switch",
        "api",
        "socket",
        "protocol"
      ],
      "author": "codetheweb"
    },
    {
      "name": "coap-packet",
      "descriptions": "Generate and Parse CoAP packets",
      "keyword": [
        "coap",
        "m2m",
        "iot",
        "udp",
        "packet"
      ],
      "author": "matteo.collina"
    },
    {
      "name": "node-opcua-basic-types",
      "descriptions": "Pure nodejs OPCUA SDK - module -basic-types",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-tradfri-client",
      "descriptions": "Library to talk to IKEA Tr√•dfri Gateways without external binaries",
      "keyword": [
        "coap",
        "coaps",
        "dtls",
        "iot",
        "tradfri",
        "ikea",
        "lighting"
      ],
      "author": "alcalzone"
    },
    {
      "name": "mhub",
      "descriptions": "Simple, flexible message hub using websockets",
      "keyword": [
        "mhub",
        "iot",
        "message",
        "bus",
        "pubsub",
        "publish",
        "subscribe"
      ],
      "author": "poelstra"
    },
    {
      "name": "node-opcua-factory",
      "descriptions": "Pure nodejs OPCUA SDK - module -factory",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-binary-stream",
      "descriptions": "Pure nodejs OPCUA SDK - module -binary-stream",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-status-code",
      "descriptions": "Pure nodejs OPCUA SDK - module -status-code",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-data-model",
      "descriptions": "Pure nodejs OPCUA SDK - module -data-model",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "blynk-library",
      "descriptions": "Blynk library implementation for JavaScript (Node.js, Espruino)",
      "keyword": [
        "Arduino",
        "Espruino",
        "Raspberry Pi",
        "IoT",
        "Internet of Things"
      ],
      "author": "vshymanskyy"
    },
    {
      "name": "spi-device",
      "descriptions": "SPI serial bus access with Node.js",
      "keyword": [
        "spi",
        "iot",
        "raspberry",
        "raspi",
        "rpi",
        "pi",
        "beaglebone",
        "linux"
      ],
      "author": "fivdi"
    },
    {
      "name": "node-opcua-debug",
      "descriptions": "Pure nodejs OPCUA SDK - module -debug",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-variant",
      "descriptions": "Pure nodejs OPCUA SDK - module -variant",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-types",
      "descriptions": "Pure nodejs OPCUA SDK - module -generator",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "particle-cli",
      "descriptions": "Simple Node commandline application for working with your Particle devices and using the Particle Cloud",
      "keyword": [
        "cli",
        "core",
        "electron",
        "iot",
        "particle",
        "photon",
        "spark"
      ],
      "author": "particlebot"
    },
    {
      "name": "node-opcua-utils",
      "descriptions": "Pure nodejs OPCUA SDK - module -utils",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-service-secure-channel",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-secure-channel",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "resin-sdk",
      "descriptions": "The Resin.io JavaScript SDK",
      "keyword": [
        "sdk",
        "resin",
        "resin.io",
        "iot",
        "devices"
      ],
      "author": "balena.io"
    },
    {
      "name": "node-opcua-enum",
      "descriptions": "Pure nodejs OPCUA SDK - module -enum",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "balena-sdk",
      "descriptions": "The Balena JavaScript SDK",
      "keyword": [
        "sdk",
        "resin",
        "resin.io",
        "balena",
        "balena.io",
        "iot",
        "devices"
      ],
      "author": "balena.io"
    },
    {
      "name": "node-opcua-data-value",
      "descriptions": "Pure nodejs OPCUA SDK - module -data-value",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "netbeast",
      "descriptions": "Resources for node.js wrapper",
      "keyword": [
        "netbeast",
        "resources",
        "iot",
        "home",
        "automation"
      ],
      "author": "netbeast"
    },
    {
      "name": "ds18b20",
      "descriptions": "Get temperature from the DS18B20 sensor connected to RPI",
      "keyword": [
        "raspberry",
        "pi",
        "sensor",
        "iot",
        "rpi",
        "ds18b20",
        "temperature"
      ],
      "author": "chamerling"
    },
    {
      "name": "node-opcua-constants",
      "descriptions": "Pure nodejs OPCUA SDK - module -constants",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-coap-client",
      "descriptions": "Clientside implementation of the CoAP protocol with DTLS support.",
      "keyword": [
        "coap",
        "coaps",
        "dtls",
        "iot",
        "tradfri"
      ],
      "author": "alcalzone"
    },
    {
      "name": "node-opcua-extension-object",
      "descriptions": "Pure nodejs OPCUA SDK - module -extension-object",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-crypto",
      "descriptions": "Crypto tools for Node-OPCUA",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-address-space",
      "descriptions": "Pure nodejs OPCUA SDK - module -address-space",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-buffer-utils",
      "descriptions": "Pure nodejs OPCUA SDK - module -buffer-utils",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-raspistill",
      "descriptions": "Node wrapper for taking photos using Raspberry Pi raspistill app.",
      "keyword": [
        "raspberry",
        "camera",
        "raspistill",
        "typescript",
        "iot"
      ],
      "author": "dlukanin"
    },
    {
      "name": "vandium",
      "descriptions": "AWS Lambda framework for building functions using Node.js for API Gateway, IoT applications, and other AWS events",
      "keyword": [
        "AWS Lambda",
        "AWS Lambda Framework",
        "JWT",
        "AWS",
        "Lambda",
        "framework",
        "validation",
        "wrapper",
        "api",
        "gateway",
        "sql",
        "sql injection",
        "sqli",
        "injection",
        "View more"
      ],
      "author": "richardhyatt"
    },
    {
      "name": "serverless-google-cloudfunctions",
      "descriptions": "Provider plugin for the Serverless Framework v1.x which adds support for Google Cloud Functions.",
      "keyword": [
        "serverless",
        "serverless framework",
        "serverless applications",
        "serverless modules",
        "google cloud functions",
        "iot",
        "internet of things",
        "serverless.com"
      ],
      "author": "pmuens"
    },
    {
      "name": "barnowl",
      "descriptions": "Middleware for low-power wireless radio infrastructure. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "Bluetooth Low Energy",
        "BLE",
        "RFID",
        "IoT",
        "RTLS",
        "middleware",
        "M2M"
      ],
      "author": "reelyactive"
    },
    {
      "name": "aws-mqtt",
      "descriptions": "AWS IoT MQTT broker client",
      "keyword": [
        "aws",
        "iot",
        "mqtt",
        "client",
        "stream",
        "websocket"
      ],
      "author": "kmamykin"
    },
    {
      "name": "zetta",
      "descriptions": "An API-first, open source software platform for the Internet of Things. http://zettajs.org",
      "keyword": [
        "zetta",
        "iot",
        "internet of things",
        "api",
        "hypermedia"
      ],
      "author": "adammagaluk"
    },
    {
      "name": "node-opcua-service-browse",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-browse",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "platformio-node-helpers",
      "descriptions": "Collection of Node.JS helpers for PlatformIO",
      "keyword": [
        "PlatformIO",
        "IoT",
        "debug",
        "unittest",
        "embedded",
        "flash",
        "firmware",
        "arduino",
        "CMSIS",
        "ESP-IDF",
        "SPL",
        "mbed",
        "STM32Cube",
        "avr",
        "View more"
      ],
      "author": "platformio"
    },
    {
      "name": "node-red-contrib-admin",
      "descriptions": "Node-red-contrib-admin ======================== An admin tab for <a href=\"http://nodered.org\" target=\"_new\">Node-RED</a>.",
      "keyword": [
        "enebular",
        "enebular-agent",
        "node-red",
        "editor",
        "messaging",
        "iot",
        "m2m",
        "flow"
      ],
      "author": "joeartsea"
    },
    {
      "name": "node-opcua-date-time",
      "descriptions": "Pure nodejs OPCUA SDK - module -date-time",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-numeric-range",
      "descriptions": "Pure nodejs OPCUA SDK - module -numeric-range",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-red-contrib-ibm-watson-iot",
      "descriptions": "Connect to IBM Watson Internet of Things Plaform as a Device or Gateway",
      "keyword": [
        "node-red",
        "bluemix",
        "watson",
        "iot",
        "ibm"
      ],
      "author": "lokesh.h.k"
    },
    {
      "name": "node-opcua-service-call",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-call",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "evrythng",
      "descriptions": "Official Javascript SDK for the EVRYTHNG API.",
      "keyword": [
        "evrythng",
        "iot",
        "wot",
        "internet of things",
        "web of things"
      ],
      "author": "evt-master"
    },
    {
      "name": "farmbot",
      "descriptions": "Farmbot Javascript client.",
      "keyword": [
        "farming",
        "agriculture",
        "iot",
        "arduino",
        "typescript"
      ],
      "author": "rickcarlino"
    },
    {
      "name": "node-opcua-service-translate-browse-path",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-translate-browse-path",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-common",
      "descriptions": "Pure nodejs OPCUA SDK - module -common",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-service-endpoints",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-endpoints",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-object-registry",
      "descriptions": "Pure nodejs OPCUA SDK - module -object-registry",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "stk500-v2",
      "descriptions": "STK500 v2 programmer in javascript",
      "keyword": [
        "stk500",
        "chrome",
        "browserify",
        "node",
        "serial",
        "arduino",
        "embedded",
        "iot"
      ],
      "author": "soldair"
    },
    {
      "name": "node-opcua-service-read",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-read",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-service-filter",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-filter",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "microgear",
      "descriptions": "NETPIE client library",
      "keyword": [
        "netpie",
        "iot",
        "platform"
      ],
      "author": "chavee"
    },
    {
      "name": "node-opcua-guid",
      "descriptions": "Pure nodejs OPCUA SDK - module -guid",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-hostname",
      "descriptions": "Pure nodejs OPCUA SDK - module -hostname",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-client",
      "descriptions": "Pure nodejs OPCUA SDK - module -client",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-secure-channel",
      "descriptions": "Pure nodejs OPCUA SDK - module -secure-channel",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-nodesets",
      "descriptions": "Pure nodejs OPCUA SDK - module -nodesets",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "coap-cli",
      "descriptions": "A CLI for CoAP",
      "keyword": [
        "coap",
        "udp",
        "m2m",
        "iot",
        "internet",
        "of",
        "things"
      ],
      "author": "gerdemann"
    },
    {
      "name": "wotcity.io",
      "descriptions": "Web of Things Framework by WoT.City",
      "keyword": [
        "iot",
        "wot",
        "websockets"
      ],
      "author": "jollen"
    },
    {
      "name": "node-opcua-pseudo-session",
      "descriptions": "Pure nodejs OPCUA SDK - module -client-proxy",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-service-history",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-history",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-service-write",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-write",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-xml2json",
      "descriptions": "Pure nodejs OPCUA SDK - module -xml2json",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-certificate-manager",
      "descriptions": "Pure nodejs OPCUA SDK - module -client",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "skynet",
      "descriptions": "Meshblu IoT network and API",
      "keyword": [
        "iot",
        "internet of things",
        "arduino",
        "tessel",
        "raspberrypi",
        "skynet"
      ],
      "author": "iamruinous"
    },
    {
      "name": "cylon-ble",
      "descriptions": "Cylon module for Bluetooth Low Energy (LE) peripherals",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "Bluetooth",
        "BLE",
        "Bluetooth LE"
      ],
      "author": "deadprogram"
    },
    {
      "name": "alljoyn",
      "descriptions": "Alljoyn NodeJS Integration",
      "keyword": [
        "alljoyn",
        "iot",
        "octoblu"
      ],
      "author": "octoblu"
    },
    {
      "name": "node-opcua-service-subscription",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-subscription",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "barnacles",
      "descriptions": "Real-time location and sensor data aggregator and propagator. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "IoT",
        "RTLS",
        "M2M"
      ],
      "author": "reelyactive"
    },
    {
      "name": "node-opcua-service-discovery",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-discovery",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "raptor-sdk",
      "descriptions": "Raptor javascript SDK",
      "keyword": [
        "raptor",
        "platform",
        "broker",
        "iot"
      ],
      "author": "mpiazzola"
    },
    {
      "name": "node-opcua-schemas",
      "descriptions": "Pure nodejs OPCUA SDK - module -schemas",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "@manekinekko/angular-web-bluetooth",
      "descriptions": "A Web Bluetooth (Bluetooth Low Energy) module for angular (v2+)",
      "keyword": [
        "angular",
        "angular2",
        "bluetooth",
        "low",
        "energy",
        "web",
        "ble",
        "iot",
        "sensor",
        "accelerometer",
        "luxometer",
        "transmitter",
        "magnetometer",
        "ir",
        "View more"
      ],
      "author": "manekinekko"
    },
    {
      "name": "paho.mqtt.js",
      "descriptions": "The Paho JavaScript Client is a browser-based library that uses WebSockets to connect to an MQTT server.",
      "keyword": [
        "mqtt client",
        "mqtt",
        "iot",
        "Paho.MQTT",
        "SSL/TLS",
        "WebSocket"
      ],
      "author": "huangguozhen"
    },
    {
      "name": "node-opcua-service-session",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-session",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-server",
      "descriptions": "Pure nodejs OPCUA SDK - module -server",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "openzwave",
      "descriptions": "Control a Z-Wave network via the Open Z-Wave library",
      "keyword": [
        "automation",
        "home",
        "iot",
        "openzwave",
        "open-zwave",
        "z-wave",
        "zwave"
      ],
      "author": "jperkin"
    },
    {
      "name": "mfrc522-rpi",
      "descriptions": "Small JavaScript interface to control RFID reader MFRC522 with Raspberry-pi",
      "keyword": [
        "mfrc522",
        "rfid",
        "nfc",
        "rpi",
        "internet-of-things",
        "iot",
        "javascript",
        "nodejs"
      ],
      "author": "firsttris"
    },
    {
      "name": "starbian",
      "descriptions": "Wator star edge",
      "keyword": [
        "iot",
        "ipfs",
        "ipfs pubsub",
        "wator"
      ],
      "author": "wator"
    },
    {
      "name": "cylon-gpio",
      "descriptions": "Cylon module for General Purpose Input/Output (GPIO)",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "gpio"
      ],
      "author": "deadprogram"
    },
    {
      "name": "node-opcua-packet-analyzer",
      "descriptions": "Pure nodejs OPCUA SDK - module -packet-analyzer",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-service-register-node",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-register-node",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "@aws-cdk/aws-iot",
      "descriptions": "The CDK Construct Library for AWS::IoT",
      "keyword": [
        "aws",
        "cdk",
        "constructs",
        "iot"
      ],
      "author": "aws-cdk-team"
    },
    {
      "name": "node-opcua-data-access",
      "descriptions": "Pure nodejs OPCUA SDK - module -data-access",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "smart-house-frontend",
      "descriptions": "Smart House UI",
      "keyword": [
        "smart",
        "house",
        "IoT"
      ],
      "author": "borys.ihnatyev"
    },
    {
      "name": "node-opcua-service-query",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-query",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-packet-assembler",
      "descriptions": "Pure nodejs OPCUA SDK - module -packet-assembler",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "evrythng-extended",
      "descriptions": "Javascript SDK to communicate with EVRYTHNG REST API",
      "keyword": [
        "evrythng",
        "everything",
        "thng",
        "evt",
        "iot",
        "internet of things",
        "wot",
        "web of things",
        "thng-hub",
        "hub",
        "mqtt",
        "thng-scan",
        "scanthng"
      ],
      "author": "evrythng"
    },
    {
      "name": "cylon-joystick",
      "descriptions": "Cylon module for any HID joystick",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "joystick",
        "gamepad",
        "xbox",
        "xbox360",
        "ps2",
        "ps3",
        "View more"
      ],
      "author": "deadprogram"
    },
    {
      "name": "clearblade",
      "descriptions": "ClearBlade NOVI SDK for Node.js.",
      "keyword": [
        "iot",
        "clearblade",
        "mobile",
        "NOVI"
      ],
      "author": "aalcott14"
    },
    {
      "name": "swim-client-js",
      "descriptions": "Swim JavaScript Client",
      "keyword": [
        "actor",
        "broker",
        "command",
        "control",
        "dispatch",
        "distributed",
        "event",
        "iot",
        "messaging",
        "microservice",
        "reactive",
        "realtime",
        "recon",
        "semantic",
        "View more"
      ],
      "author": "c9r"
    },
    {
      "name": "node-opcua-client-dynamic-extension-object",
      "descriptions": "Pure nodejs OPCUA SDK - module client-dynamic-extension-object",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-transport",
      "descriptions": "Pure nodejs OPCUA SDK - module -transport",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "thing-it-test",
      "descriptions": "Test and verification for all [thing-it-node] Plugins.",
      "keyword": [
        "IoT",
        "thing-it",
        "test"
      ],
      "author": "julianseibert"
    },
    {
      "name": "node-opcua-chunkmanager",
      "descriptions": "Pure nodejs OPCUA SDK - module -chunkmanager",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-service-node-management",
      "descriptions": "Pure nodejs OPCUA SDK - module -service-node-management",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "remote-io",
      "descriptions": "Remote control any io plugin via firmata",
      "keyword": [
        "firmata",
        "johnny-five",
        "io-plugin",
        "mqtt",
        "socket.io",
        "iot"
      ],
      "author": "monteslu"
    },
    {
      "name": "waliyun",
      "descriptions": "ALL Aliyun APIs",
      "keyword": [
        "api",
        "aliyun",
        "sdk",
        "open",
        "open-api",
        "ecs",
        "oss",
        "sts",
        "rds",
        "cdn",
        "drds",
        "dns",
        "monitor",
        "iot"
      ],
      "author": "willin"
    },
    {
      "name": "vizibles",
      "descriptions": "Library to connect with Vizibles from Node.js clients",
      "keyword": [
        "vizibles",
        "iot",
        "internet of things",
        "things"
      ],
      "author": "jamartinez-enxine"
    },
    {
      "name": "cylon-i2c",
      "descriptions": "Cylon.js drivers for i2c devices",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "i2c"
      ],
      "author": "deadprogram"
    },
    {
      "name": "node-opcua-generator",
      "descriptions": "Pure nodejs OPCUA SDK - module -generator",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "fauxmojs",
      "descriptions": "Fake WeMo device ported to NodeJS. Allows Alexa to make api calls.",
      "keyword": [
        "alexa",
        "nodejs",
        "node",
        "javascript",
        "wemo",
        "fauxmo",
        "fauxmojs",
        "iot",
        "raspberry",
        "pi"
      ],
      "author": "dsandor"
    },
    {
      "name": "adafruit-io",
      "descriptions": "Adafruit IO Client, Local Server, & io.adafruit.com TLS Tunnel",
      "keyword": [
        "adafruit",
        "io",
        "adafruit io",
        "iot",
        "internet",
        "of",
        "things",
        "tunnel",
        "raspberry",
        "pi",
        "raspberry pi",
        "raspi"
      ],
      "author": "toddtreece"
    },
    {
      "name": "sds011-wrapper",
      "descriptions": "Wrapper library created to simplify usage of SDS011 laser dust sensor in your projects",
      "keyword": [
        "SDS011",
        "IoT",
        "air",
        "dust",
        "PM",
        "UART"
      ],
      "author": "triforcely"
    },
    {
      "name": "node-red-contrib-scx-ibmiotapp",
      "descriptions": "IoT Application Node-RED node for the Registered and Quickstart flows in IBM Watson IoT Platform",
      "keyword": [
        "node-red",
        "bluemix",
        "iotcloud",
        "watsoniot",
        "watson",
        "iot",
        "platform"
      ],
      "author": "jeffdare"
    },
    {
      "name": "iotivity-node",
      "descriptions": "IoTivity bindings",
      "keyword": [
        "oic",
        "iotivity",
        "iot"
      ],
      "author": "gabrielschulhof"
    },
    {
      "name": "cylon-sphero",
      "descriptions": "Cylon module for Sphero robot",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "sphero",
        "spherojs",
        "orbotix"
      ],
      "author": "deadprogram"
    },
    {
      "name": "thing.js",
      "descriptions": "Create thing objects with properties, actions, and events. Use for IoT devices or even living things like plants.",
      "keyword": [
        "IoT",
        "Internet of Things",
        "thing",
        "iot"
      ],
      "author": "common-garden"
    },
    {
      "name": "node-red-contrib-ifttt",
      "descriptions": "A node-red node to connect to ifttt Maker channel",
      "keyword": [
        "iot",
        "node-red",
        "ifttt"
      ],
      "author": "lorenwest"
    },
    {
      "name": "cylon-intel-iot",
      "descriptions": "Cylon module for Intel Joule, Edison, and Galileo IoT platforms",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "gpio",
        "i2c",
        "intel",
        "edison",
        "galileo",
        "joule"
      ],
      "author": "deadprogram"
    },
    {
      "name": "node-opcua-client-proxy",
      "descriptions": "Pure nodejs OPCUA SDK - module -client-proxy",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "sigfox-aws",
      "descriptions": "Framework for building a Sigfox server, based on Amazon Web Services and Lambda Functions",
      "keyword": [
        "sigfox",
        "aws",
        "lambda",
        "iot"
      ],
      "author": "lupyuen"
    },
    {
      "name": "node-opcua-vendor-diagnostic",
      "descriptions": "Pure nodejs OPCUA SDK - module -vendor-diagnostic",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "node-opcua-address-space-for-conformance-testing",
      "descriptions": "Pure nodejs OPCUA SDK - module -address-space-for-conformance-testing",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "serverless-azure-functions",
      "descriptions": "Provider plugin for the Serverless Framework v1.x which adds support for Azure Functions.",
      "keyword": [
        "serverless",
        "serverless framework",
        "serverless applications",
        "serverless modules",
        "azure functions",
        "iot",
        "internet of things",
        "serverless.com"
      ],
      "author": "sls-az-func"
    },
    {
      "name": "node-opcua-client-crawler",
      "descriptions": "Pure nodejs OPCUA SDK - module -client-crawler",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "broadlinkjs-rm",
      "descriptions": "A Node.JS fork of broadlinkjs specifically intended for interacting with RM devices in homebridge-broadlink-rm",
      "keyword": [
        "Broadlink",
        "IoT",
        "remote",
        "control"
      ],
      "author": "lprhodes"
    },
    {
      "name": "chickadee",
      "descriptions": "Contextual associations store and API. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "IoT",
        "hyperlocal context",
        "API",
        "contextual associations"
      ],
      "author": "reelyactive"
    },
    {
      "name": "Thing.js",
      "descriptions": "Create thing objects with properties, actions, and events. Use for IoT devices or even living things like plants.",
      "keyword": [
        "IoT",
        "Internet of Things",
        "thing",
        "iot"
      ],
      "author": "common-garden"
    },
    {
      "name": "node-opcua-server-discovery",
      "descriptions": "Pure nodejs OPCUA SDK - module -server-discovery",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "array-gpio",
      "descriptions": "ARM peripherals control library for a quick microcontroller prototyping and development using a simple modern API.",
      "keyword": [
        "bcm2835",
        "gpio",
        "pi",
        "raspberry",
        "raspberrypi",
        "raspberry pi",
        "raspberry pi 3",
        "rpi",
        "rpio",
        "onoff",
        "pwm",
        "i2c",
        "spi",
        "m2m",
        "View more"
      ],
      "author": "edolabworks"
    },
    {
      "name": "netbeast-cli",
      "descriptions": "Netbeast OS dashboard, IoT apps manager",
      "keyword": [
        "netbeast",
        "beast",
        "iot",
        "node",
        "dashboard",
        "smart",
        "router"
      ],
      "author": "luisfpinto"
    },
    {
      "name": "node-pebble",
      "descriptions": "A module for interacting with your smart watch over serial.",
      "keyword": [
        "pebble",
        "watch",
        "elroy",
        "IoT"
      ],
      "author": "mdobs"
    },
    {
      "name": "wia",
      "descriptions": "Node.js SDK for Wia",
      "keyword": [
        "wia",
        "iot",
        "cloud",
        "api"
      ],
      "author": "conalllaverty"
    },
    {
      "name": "decentralized-internet",
      "descriptions": "An NPM library of programs to create decentralized web and distributed computing projects",
      "keyword": [
        "Web",
        "P2P",
        "IOT",
        "Peer",
        "Crypto",
        "Mining",
        "Internet",
        "Protocols",
        "Blockchain",
        "ember-addon",
        "Distributed",
        "Decentralized",
        "Cryptocurrency",
        "Grid Computing"
      ],
      "author": "gamer456148"
    },
    {
      "name": "dorita980",
      "descriptions": "Unofficial iRobot Roomba 980 and wifi other enabled series library sdk",
      "keyword": [
        "unofficial",
        "iRobot",
        "Roomba",
        "980",
        "wifi",
        "i7",
        "e5",
        "960",
        "690",
        "675",
        "library",
        "sdk",
        "robot",
        "local",
        "View more"
      ],
      "author": "koalazak"
    },
    {
      "name": "sigfox-iot-cloud",
      "descriptions": "Framework for building a Sigfox server, based on AWS or Google Cloud",
      "keyword": [
        "sigfox",
        "iot",
        "cloud"
      ],
      "author": "lupyuen"
    },
    {
      "name": "internet-of-things",
      "descriptions": "Netbeast Internet Of Things Open Source documentation packaged to run offline",
      "keyword": [
        "iot",
        "internet",
        "of",
        "things",
        "netbeast",
        "raspberry",
        "pi"
      ],
      "author": "netbeast"
    },
    {
      "name": "iot-dashboard",
      "descriptions": "A generic dashboard application based on JavaScript, HTML and CSS. http://iot-dashboard.org",
      "keyword": [
        "iot",
        "dashboard",
        "M2M",
        "react",
        "internet of things",
        "sensor",
        "monitoring"
      ],
      "author": "niondir"
    },
    {
      "name": "wirelesstags",
      "descriptions": "Interface to the Wireless Sensor Tags platform (http://wirelesstag.net)",
      "keyword": [
        "wirelesstag",
        "iot"
      ],
      "author": "hlapp"
    },
    {
      "name": "bt-presence",
      "descriptions": "Detects collective presence or absence of a set of bluetooth devices",
      "keyword": [
        "bluetooth",
        "bluez",
        "presence",
        "absence",
        "l2ping",
        "IoT",
        "automation",
        "scan",
        "ping",
        "detect",
        "detection"
      ],
      "author": "cmvee"
    },
    {
      "name": "pvcloud",
      "descriptions": "PvCloud Utility. This provides all services needed to connect to a pvcloud service and interact with it.",
      "keyword": [
        "pvcloud",
        "iot"
      ],
      "author": "janunezc"
    },
    {
      "name": "node-red-contrib-dht-sensor",
      "descriptions": "Node-red node for node-dht-sensor",
      "keyword": [
        "node-red",
        "iot",
        "device",
        "devices",
        "raspberry",
        "raspi",
        "rpi",
        "pi",
        "temperature",
        "humidity",
        "sensor",
        "dht11",
        "dht22"
      ],
      "author": "bpmurray"
    },
    {
      "name": "@tuyapi/cloud",
      "descriptions": "A NodeJS wrapper for Tuya's cloud API",
      "keyword": [
        "iot",
        "cloud",
        "tuya",
        "wrapper",
        "api"
      ],
      "author": "codetheweb"
    },
    {
      "name": "pvcloud_lib",
      "descriptions": "Library to communicate to a pvCloud environment",
      "keyword": [
        "pvcloud",
        "iot"
      ],
      "author": "janunezc"
    },
    {
      "name": "node-enocean-dimmer",
      "descriptions": "A dimmer for node-enocean",
      "keyword": [
        "enocean",
        "node-enocean",
        "dimmer",
        "eltako",
        "FSUD",
        "230",
        "iot",
        "home",
        "automation"
      ],
      "author": "holgerwill"
    },
    {
      "name": "node-enocean-button",
      "descriptions": "A button for node-enocean",
      "keyword": [
        "enocean",
        "eep",
        "f6-02-03",
        "iot",
        "home",
        "automation",
        "virtual",
        "button"
      ],
      "author": "holgerwill"
    },
    {
      "name": "rachio",
      "descriptions": "Node.js client for Rachio Smart Sprinkler controller",
      "keyword": [
        "rachio",
        "sprinkler",
        "api",
        "node.js",
        "client",
        "smart",
        "home",
        "automation",
        "iot"
      ],
      "author": "boatmeme"
    },
    {
      "name": "node-raspi",
      "descriptions": "Raspberry pi toolkit for node.js",
      "keyword": [
        "raspberry",
        "raspi",
        "util",
        "iot",
        "embedded"
      ],
      "author": "psychip"
    },
    {
      "name": "cylon-speech",
      "descriptions": "Cylon module for text to speech",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "speech",
        "espeak",
        "tts"
      ],
      "author": "deadprogram"
    },
    {
      "name": "node-red-contrib-netbeast",
      "descriptions": "Netbeast nodes for node-red",
      "keyword": [
        "netbeast",
        "node-red",
        "iot",
        "flow"
      ],
      "author": "netbeast"
    },
    {
      "name": "iotduino",
      "descriptions": "Create Node.js IoT projects by using low level hardware access of the PCDuino boards.",
      "keyword": [
        "IoT",
        "Arduino",
        "PCDuino"
      ],
      "author": "dimircea"
    },
    {
      "name": "node-red-contrib-ds18b20-sensor",
      "descriptions": "Node-red node to connect DS18B20 sensors",
      "keyword": [
        "node-red",
        "iot",
        "device",
        "devices",
        "raspberry",
        "raspi",
        "rpi",
        "pi",
        "temperature",
        "dallas",
        "one-wire",
        "sensor",
        "DS1822",
        "DS18S20"
      ],
      "author": "bpmurray"
    },
    {
      "name": "thethingsio-api",
      "descriptions": "API library for api.theThings.IO endpoint",
      "keyword": [
        "http",
        "client",
        "theThings",
        "theThings.IO",
        "API REST",
        "API",
        "internet of things",
        "IoT"
      ],
      "author": "thethingsio"
    },
    {
      "name": "node-red-contrib-particle",
      "descriptions": "Node-RED node to connect to Particle devices. Used to publish Events, call Functions, read Variables or listen to Server-Sent Events (SSEs)",
      "keyword": [
        "node-red",
        "particle",
        "core",
        "photon",
        "electron",
        "P1",
        "boron",
        "argon",
        "xenon",
        "iot",
        "spark",
        "mesh",
        "device"
      ],
      "author": "chuank"
    },
    {
      "name": "thingspeakclient",
      "descriptions": "Node.js Client for ThingSpeak",
      "keyword": [
        "thingspeak",
        "iot",
        "IoT",
        "sensor"
      ],
      "author": "imwebgefunden"
    },
    {
      "name": "thingjs-agent",
      "descriptions": "Agent Framework for building the Internet of Things",
      "keyword": [
        "internet of things",
        "internet of wild things",
        "internet of everything",
        "web of things",
        "iot",
        "m2m",
        "wot",
        "agent",
        "behaviour",
        "messaging",
        "ontology",
        "sensor",
        "actuator",
        "json-ld"
      ],
      "author": "cullens"
    },
    {
      "name": "node-red-contrib-aws",
      "descriptions": "A collection of Node-RED nodes for AWS. Includes nodes for DynamoDB, EC2, IoT, Kinesis, Lambda, SNS, SQS and S3.",
      "keyword": [
        "node-red",
        "aws",
        "ec2",
        "kinesis",
        "lamdba",
        "s3",
        "sqs",
        "sns",
        "dynamodb",
        "iot",
        "es",
        "ecs",
        "polly",
        "rekognition",
        "View more"
      ],
      "author": "daniel-t"
    },
    {
      "name": "iot-native-lang",
      "descriptions": "Robots can hear us in node.js",
      "keyword": [
        "iot",
        "robots",
        "cylon",
        "lang",
        "speach",
        "natural"
      ],
      "author": "afoninsky"
    },
    {
      "name": "redzilla",
      "descriptions": "A node-red instances generator",
      "keyword": [
        "node-red",
        "multiuser",
        "iot"
      ],
      "author": "muka"
    },
    {
      "name": "smart-home",
      "descriptions": "Netbeast dashboard, IoT apps manager",
      "keyword": [
        "netbeast",
        "beast",
        "iot",
        "node",
        "dashboard",
        "smart",
        "router"
      ],
      "author": "luisfpinto"
    },
    {
      "name": "homebridge-roomba",
      "descriptions": "Homebridge-plugin for Roomba980",
      "keyword": [
        "homebridge-plugin",
        "unofficial",
        "iRobot",
        "Roomba",
        "980",
        "IoT"
      ],
      "author": "umesan"
    },
    {
      "name": "raddec",
      "descriptions": "RADio DECoding packet library for RFID, RTLS and M2M. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "IoT",
        "RFID",
        "RTLS",
        "M2M",
        "library"
      ],
      "author": "reelyactive"
    },
    {
      "name": "xy-console",
      "descriptions": "Web ssh access, made from tty.js",
      "keyword": [
        "xway",
        "iot",
        "netbeast"
      ],
      "author": "jesusdario"
    },
    {
      "name": "@sematext/logagent",
      "descriptions": "Smart log parser written in Node",
      "keyword": [
        "Logagent",
        "monitoring",
        "alerting",
        "log management",
        "sematext",
        "logsene",
        "log parser",
        "logging",
        "log shipper",
        "elasticsearch",
        "indexing",
        "etl",
        "logstash alternative",
        "filebeat alternative",
        "View more"
      ],
      "author": "sematext"
    },
    {
      "name": "iot-coap",
      "descriptions": "IoT CoAP Framework, A Internet Of Things Framework of CoAP Protocol",
      "keyword": [
        "coap",
        "iot",
        "internet of things"
      ],
      "author": "gmszone"
    },
    {
      "name": "@c8y/ngx-components",
      "descriptions": "Angular modules for Cumulocity IoT applications",
      "keyword": [
        "Cumulocity",
        "IoT",
        "m2m",
        "Angular",
        "Components"
      ],
      "author": "c8y"
    },
    {
      "name": "homebridge-mqttthing",
      "descriptions": "Homebridge plugin supporting various services over MQTT",
      "keyword": [
        "homebridge-plugin",
        "MQTT",
        "homekit",
        "Siri",
        "IoT",
        "ESPurna",
        "tasmota",
        "light",
        "light bulb",
        "switch",
        "outlet",
        "motion sensor",
        "occupancy sensor",
        "light sensor",
        "View more"
      ],
      "author": "arachnetech"
    },
    {
      "name": "@iotize/device-client.js",
      "descriptions": "IoTize Device client for Javascript",
      "keyword": [
        "IoTize Device Client API",
        "IoTize",
        "IOT"
      ],
      "author": "stephane.leonard"
    },
    {
      "name": "iot-433mhz",
      "descriptions": "Node server to handle 433mhz outlets and sensors.",
      "keyword": [
        "iot",
        "433mhz",
        "domotic",
        "arduino",
        "raspberry",
        "433",
        "rc-switch",
        "pir"
      ],
      "author": "roccomuso"
    },
    {
      "name": "node-red-contrib-google-action",
      "descriptions": "A node-red node for interfacing with actions from Google Assistant.",
      "keyword": [
        "node-red",
        "android",
        "iot",
        "google"
      ],
      "author": "deancording"
    },
    {
      "name": "fiip",
      "descriptions": "Fast Internet Interconnection Protocol",
      "keyword": [
        "iot",
        "Protocol"
      ],
      "author": "rise0chen"
    },
    {
      "name": "wot-typescript-definitions",
      "descriptions": "TypeScript definitions for the W3C WoT Scripting API",
      "keyword": [
        "Web",
        "W3C",
        "WoT",
        "IoT",
        "things",
        "scripting",
        "typescript",
        "types"
      ],
      "author": "danielpeintner"
    },
    {
      "name": "thing-it-node",
      "descriptions": "Thing-it Node Server",
      "keyword": [
        "IoT",
        "nodejs",
        "REST",
        "WebSocket",
        "Actor Animation",
        "Arduino",
        "BeagleBone Black",
        "Raspberry Pi"
      ],
      "author": "julianseibert"
    },
    {
      "name": "tinkerhub",
      "descriptions": "Connect your things together and tinker with them",
      "keyword": [
        "tinkerhub",
        "iot",
        "home automation"
      ],
      "author": "aholstenson"
    },
    {
      "name": "homekit2mqtt",
      "descriptions": "HomeKit to MQTT bridge",
      "keyword": [
        "homekit",
        "Siri",
        "MQTT",
        "Smart",
        "Home",
        "Internet",
        "of",
        "Things",
        "IoT",
        "mqtt-smarthome"
      ],
      "author": "hobbyquaker"
    },
    {
      "name": "homebridge-mqttswitch",
      "descriptions": "Homebridge plugin for MQTT switches",
      "keyword": [
        "homebridge-plugin",
        "MQTT",
        "homekit",
        "Siri",
        "IoT",
        "Switch"
      ],
      "author": "ilcato"
    },
    {
      "name": "homebridge-lightify",
      "descriptions": "Homebridge plugin providing access to OSRAM Lightify products",
      "keyword": [
        "homebridge-lightify",
        "lightify",
        "osram",
        "light",
        "iot",
        "homebridge-plugin"
      ],
      "author": "chris1705"
    },
    {
      "name": "meshblu-encryption",
      "descriptions": "Common encryption functions and patterns for Meshblu",
      "keyword": [
        "IoT",
        "Meshblu",
        "encryption"
      ],
      "author": "octoblu"
    },
    {
      "name": "iopa-common-middleware",
      "descriptions": "Iopa-common-middleware is a core set of iopa middleware for building self-hosted servers",
      "keyword": [
        "limerun",
        "iopa",
        "iot",
        "session",
        "middleware",
        "promise",
        "framework",
        "fabric"
      ],
      "author": "iopa"
    },
    {
      "name": "@nec-baas/jssdk",
      "descriptions": "NEC Mobile Backend Platform JavaScript SDK",
      "keyword": [
        "nec",
        "baas",
        "iot",
        "mobile",
        "internet of things",
        "backend",
        "api gateway",
        "serverless",
        "mongodb"
      ],
      "author": "y-okamoto"
    },
    {
      "name": "node-enocean",
      "descriptions": "Full implementation of the enocean protocol (ESP3 + EEP2.6)",
      "keyword": [
        "enocean",
        "eep",
        "iot",
        "home automation",
        "internet of things"
      ],
      "author": "holgerwill"
    },
    {
      "name": "node-red-contrib-homematic",
      "descriptions": "Node-red node to control homematic devices",
      "keyword": [
        "homematic",
        "node-red",
        "internet-of-things",
        "iot"
      ],
      "author": "firsttris"
    },
    {
      "name": "lumi-aqara",
      "descriptions": "Control your Xiaomi Smart Home devices with this Lumi Aqara library",
      "keyword": [
        "aqara",
        "gateway",
        "home",
        "iot",
        "lumi",
        "smart",
        "xiaomi"
      ],
      "author": "marvinroger"
    },
    {
      "name": "node-red-contrib-grovepi",
      "descriptions": "Node Red Nodes for GrovePi Enhancements to the Raspberry PI",
      "keyword": [
        "node-red",
        "iot",
        "grovepi"
      ],
      "author": "ohahn"
    },
    {
      "name": "node-red-node-test-helper",
      "descriptions": "A test framework for Node-RED nodes",
      "keyword": [
        "test",
        "iot",
        "node"
      ],
      "author": "knolleary"
    },
    {
      "name": "node-red-contrib-iot-virtual-device",
      "descriptions": "A set of nodes to help you create simulated IoT devices connected to IBM Watson IoT Platform.",
      "keyword": [
        "node-red",
        "IoT",
        "Watson",
        "Virtual devices",
        "Simulation",
        "Simulated"
      ],
      "author": "hariharaprasad"
    },
    {
      "name": "cylon-raspi",
      "descriptions": "Cylon adaptor for Raspberry Pi",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "gpio",
        "i2c",
        "raspberry pi",
        "raspberrypi",
        "raspi"
      ],
      "author": "deadprogram"
    },
    {
      "name": "smartspaces",
      "descriptions": "Combines smartspaces-server and smartspaces-client in a convenient npm package. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "Smart Spaces",
        "Hyperlocal Context",
        "IoT"
      ],
      "author": "reelyactive"
    },
    {
      "name": "node-red-contrib-youtube",
      "descriptions": "Youtube nodes for node-red",
      "keyword": [
        "node-red",
        "youtube",
        "iot",
        "contrib",
        "red"
      ],
      "author": "scaw.dev"
    },
    {
      "name": "node-beacon-scanner",
      "descriptions": "The node-beacon-scanner is a Node.js module which allows you to scan BLE beacon packets and parse the packet data. This module supports iBeacon, Eddystone, and Estimote.",
      "keyword": [
        "Eddystone",
        "iBeacon",
        "Estimote",
        "BLE",
        "Bluetooth Low Energy",
        "Bluetooth smart",
        "Bluetooth",
        "IoT",
        "Internet of Things"
      ],
      "author": "futomi"
    },
    {
      "name": "hermesjs",
      "descriptions": "Real-time messaging framework",
      "keyword": [
        "real-time",
        "real",
        "time",
        "messaging",
        "mqtt",
        "socketio",
        "websockets",
        "amqp",
        "microservices",
        "iot",
        "asyncapi"
      ],
      "author": "fmvilas"
    },
    {
      "name": "node-red-contrib-blynk-websockets",
      "descriptions": "Node Red integration with Blynk App and Server through websockets",
      "keyword": [
        "node-red",
        "blynk",
        "iot",
        "websockets"
      ],
      "author": "alextz"
    },
    {
      "name": "mcp-spi-adc",
      "descriptions": "MCP3002/4/8, MCP3202/4/8 and MCP3304 SPI analog to digital conversion",
      "keyword": [
        "mcp3008",
        "mcp3004",
        "mcp3002",
        "mcp3208",
        "mcp3204",
        "mcp3202",
        "mcp3304",
        "spi",
        "adc",
        "iot",
        "raspberry",
        "raspi",
        "rpi",
        "pi",
        "View more"
      ],
      "author": "fivdi"
    },
    {
      "name": "oma-json",
      "descriptions": "JSON schemas description from LwM2M [Open Mobile Alliance](http://www.openmobilealliance.org/wp/OMNA/LwM2M/LwM2MRegistry.html)",
      "keyword": [
        "IoT",
        "OMA",
        "Interoperability"
      ],
      "author": "getlarge"
    },
    {
      "name": "particle-commands",
      "descriptions": "Library of UX-neutral commands that provide key functionality for developer tools",
      "keyword": [
        "cli",
        "core",
        "electron",
        "iot",
        "particle",
        "photon",
        "spark"
      ],
      "author": "monkbroc"
    },
    {
      "name": "midiot",
      "descriptions": "MIDI meets Internet of Things. Real-time, real-world sounds. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "Smart Spaces",
        "IoT",
        "MIDI",
        "OSC",
        "Audio"
      ],
      "author": "reelyactive"
    },
    {
      "name": "node-dweetio",
      "descriptions": "A node.js client for dweet.io",
      "keyword": [
        "dweet.io",
        "internet of things",
        "pubsub",
        "IoT",
        "m2m",
        "robotics",
        "sensors",
        "arduino",
        "beaglebone",
        "messaging"
      ],
      "author": "jheising"
    },
    {
      "name": "phant-input-udp",
      "descriptions": "Udp input for phant",
      "keyword": [
        "data",
        "phant",
        "IoT",
        "UDP"
      ],
      "author": "toddtreece"
    },
    {
      "name": "cose-js",
      "descriptions": "JavaScript COSE implementation",
      "keyword": [
        "COSE",
        "Signing",
        "MAC",
        "Encrypt",
        "IoT"
      ],
      "author": "samuelerdtman"
    },
    {
      "name": "reelib",
      "descriptions": "Library for common reelyActive methods. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "IoT",
        "library"
      ],
      "author": "reelyactive"
    },
    {
      "name": "cylon-opencv",
      "descriptions": "Cylon module for OpenCV",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "opencv",
        "open cv",
        "vision",
        "computer vision"
      ],
      "author": "deadprogram"
    },
    {
      "name": "node-red-contrib-azure-eventhub-receive",
      "descriptions": "A simple node that receives messages from an Azure Event Hub.",
      "keyword": [
        "node-red",
        "Azure",
        "Azure Event Hub",
        "Event Hub",
        "IoT",
        "Event Hubs"
      ],
      "author": "jantielens"
    },
    {
      "name": "node-upnp",
      "descriptions": "Modern UPnP Client Library",
      "keyword": [
        "upnp",
        "media",
        "player",
        "tv",
        "music",
        "dlna",
        "iot",
        "smart home",
        "device",
        "home automation"
      ],
      "author": "velocityzen"
    },
    {
      "name": "beetoo-controller",
      "descriptions": "A visual tool for programming professional automation projects",
      "keyword": [
        "editor",
        "messaging",
        "iot",
        "ibm",
        "flow"
      ],
      "author": "aborovsky"
    },
    {
      "name": "mqtt-bridge",
      "descriptions": "Simple bridge to stream MQTT Broker data to dynamically defined back-ends",
      "keyword": [
        "mqtt",
        "iot",
        "cloud",
        "xively"
      ],
      "author": "mchmarny"
    },
    {
      "name": "morphbridge",
      "descriptions": "Resilient mesh network implementation using zmq sockets for inter protocol communication bridging.",
      "keyword": [
        "MorphBridge",
        "bridging",
        "morph",
        "iot",
        "inter-protocol communication",
        "mesh",
        "mesh network",
        "bridge"
      ],
      "author": "its2uraps"
    },
    {
      "name": "swim-proto-js",
      "descriptions": "Swim Protocol JavaScript Implementation",
      "keyword": [
        "actor",
        "broker",
        "command",
        "control",
        "dispatch",
        "distributed",
        "event",
        "iot",
        "messaging",
        "microservice",
        "reactive",
        "recon",
        "semantic",
        "service",
        "View more"
      ],
      "author": "c9r"
    },
    {
      "name": "homebridge-paradox-security-system",
      "descriptions": "Homebridge iOS HomeKit Accessory plugin to control your Paradox Alarm System",
      "keyword": [
        "homebridge-plugin",
        "homebridge",
        "paradox",
        "security",
        "alarm",
        "homekit",
        "Siri",
        "iOS",
        "IoT",
        "IP150"
      ],
      "author": "mnrgreg"
    },
    {
      "name": "@dojot/dojot-module",
      "descriptions": "A library that provides utilities and methods for dojot",
      "keyword": [
        "dojot",
        "iot"
      ],
      "author": "raulnegreiros"
    },
    {
      "name": "aws-device-gateway-signed-url",
      "descriptions": "Create a signed WebSocket URL for a MQTT AWS device gateway endpoint, so browsers can connect to AWS IOT MQTT message queues easily",
      "keyword": [
        "aws",
        "iot",
        "websockets",
        "mqtt"
      ],
      "author": "gojko"
    },
    {
      "name": "node-red-contrib-homekit",
      "descriptions": "Node-RED nodes to simulate Apple HomeKit devices",
      "keyword": [
        "homekit",
        "hap-nodejs",
        "node-red",
        "iot"
      ],
      "author": "mschm"
    },
    {
      "name": "homebridge-mqttswitch2",
      "descriptions": "Homebridge plugin for MQTT switches",
      "keyword": [
        "homebridge-plugin",
        "MQTT",
        "homekit",
        "Siri",
        "IoT",
        "Switch"
      ],
      "author": "ijammer99"
    },
    {
      "name": "hlc-server",
      "descriptions": "Serves real-time real-world context at a human scale by combining RFID, RTLS and M2M with structured, linked data on the web. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "Hyperlocal Context",
        "RFID",
        "RTLS",
        "M2M",
        "IoT"
      ],
      "author": "reelyactive"
    },
    {
      "name": "phant-input-mqtt",
      "descriptions": "Mqtt input for phant",
      "keyword": [
        "data",
        "phant",
        "IoT",
        "MQTT"
      ],
      "author": "toddtreece"
    },
    {
      "name": "sp-react-native-mqtt",
      "descriptions": "MQTT client for react-native",
      "keyword": [
        "mqtt",
        "reactnative",
        "iot"
      ],
      "author": "sudoplz"
    },
    {
      "name": "@iotize/device-admin.js",
      "descriptions": "Extras features for IoTize Tap Device API",
      "keyword": [
        "Tap Device",
        "Administration features",
        "IoTize",
        "IOT",
        "TapNLink",
        "TapNPass"
      ],
      "author": "stephane.leonard"
    },
    {
      "name": "jstiip",
      "descriptions": "Implementation of protocol TIIP",
      "keyword": [
        "tiip",
        "iot",
        "protocol",
        "json"
      ],
      "author": "dargolith"
    },
    {
      "name": "nitrogen-camera",
      "descriptions": "This module adds support for cameraCommand and cameraStatus messages to a Nitrogen application or service. It also provides the CameraManager class for interpreting message streams and driving the attached device.",
      "keyword": [
        "devices",
        "iot",
        "nitrogen"
      ],
      "author": "tpark"
    },
    {
      "name": "tibber-api",
      "descriptions": "Node.js module for connecting to Tibber API and extract data from your connected homes, including realtime data from Tibber Pulse.",
      "keyword": [
        "tibber",
        "tibber-pulse",
        "iot",
        "power",
        "home-automation",
        "smarthome",
        "energy"
      ],
      "author": "bisand"
    },
    {
      "name": "aiota",
      "descriptions": "Another Internet of Things Architecture (AIoTA)",
      "keyword": [
        "iot"
      ],
      "author": "arthur.viegers"
    },
    {
      "name": "node-red-contrib-tplink-smarthome",
      "descriptions": "A collection of node-red nodes for tp-link smart home devices",
      "keyword": [
        "node-red",
        "tplink",
        "kasa",
        "iot",
        "hs100",
        "hs105",
        "hs110",
        "hs200",
        "lb100",
        "lb110",
        "lb120",
        "lb130",
        "home",
        "smart",
        "View more"
      ],
      "author": "felixls"
    },
    {
      "name": "Grow.js",
      "descriptions": "Easily create new IoT devices and connect them to a Grow-IoT instance.",
      "keyword": [
        "IoT",
        "Internet of Things",
        "thing"
      ],
      "author": "common-garden"
    },
    {
      "name": "tiny-cdn",
      "descriptions": "A tiny static files serving handler",
      "keyword": [
        "gzip",
        "deflate",
        "cdn",
        "performance",
        "raspberry",
        "arduino",
        "IoT",
        "static",
        "files",
        "express",
        "alternative"
      ],
      "author": "webreflection"
    },
    {
      "name": "node-opcua-server-configuration",
      "descriptions": "Pure nodejs OPCUA SDK - module -server",
      "keyword": [
        "OPCUA",
        "opcua",
        "m2m",
        "iot",
        "opc ua",
        "internet of things"
      ],
      "author": "erossignon"
    },
    {
      "name": "beebotte",
      "descriptions": "Beebotte is an open cloud platform for real time connected objects. This package provides the implementation of Beebotte API in nodejs.",
      "keyword": [
        "api",
        "rest",
        "pubsub",
        "restful",
        "iot",
        "internet of things",
        "devices",
        "cloud",
        "realtime",
        "connected",
        "mqtt",
        "socketio"
      ],
      "author": "beebotte"
    },
    {
      "name": "nectarjs",
      "descriptions": "Javascript's God Mod",
      "keyword": [
        "nectar",
        "nectarjs",
        "nectar-lang",
        "javascript",
        "js",
        "god mode",
        "compilation",
        "crossplatform",
        "simple",
        "speed",
        "io",
        "iot",
        "socket",
        "linux",
        "View more"
      ],
      "author": "seraum"
    },
    {
      "name": "webthing",
      "descriptions": "HTTP Web Thing implementation",
      "keyword": [
        "mozilla",
        "iot",
        "web",
        "thing",
        "webthing"
      ],
      "author": "mrstegeman"
    },
    {
      "name": "node-red-contrib-bravia",
      "descriptions": "A Node-RED node to control Sony BRAVIA Android TVs.",
      "keyword": [
        "node-red",
        "sony",
        "bravia",
        "tv",
        "iot",
        "android",
        "androidtv"
      ],
      "author": "waynehaffenden"
    },
    {
      "name": "homebridge-tuyapi-extended",
      "descriptions": "Tuya Smart Devices API for homebridge to include smart power strips such as Jinvoo, Tuya, and more. Extended from the original tuyapi by codetheweb",
      "keyword": [
        "homebridge-plugin",
        "homebridge",
        "tuya",
        "lightbulb",
        "led",
        "IoT",
        "plug",
        "jinvoo",
        "powerstrip",
        "outlet",
        "smarthome"
      ],
      "author": "drumfreak"
    },
    {
      "name": "mist-api",
      "descriptions": "Mist API wrapper for node. Used for accessing all Mist APIs.",
      "keyword": [
        "mist",
        "api",
        "iot",
        "security",
        "peer-to-peer"
      ],
      "author": "janyman"
    },
    {
      "name": "abstract-io",
      "descriptions": "An interface and base class for creating Johnny-Five IO plugins",
      "keyword": [
        "Johnny-Five",
        "Robotics",
        "IoT",
        "Arduino",
        "Raspberry Pi"
      ],
      "author": "nebrius"
    },
    {
      "name": "zetta-honeywell-total-connect-driver",
      "descriptions": "A Zetta prototype driver for Honeywell Total Connect devices",
      "keyword": [
        "zetta",
        "honeywell",
        "totalconnect",
        "alarmnet",
        "iot",
        "security"
      ],
      "author": "landlessness"
    },
    {
      "name": "cot-lib",
      "descriptions": "Easily consume the City of Things platform data",
      "keyword": [
        "cot",
        "city of things",
        "iot",
        "data"
      ],
      "author": "tdupont"
    },
    {
      "name": "iotdb-thing",
      "descriptions": "IOTDB Module for Managing Things",
      "keyword": [
        "IOTDB",
        "IOT"
      ],
      "author": "dpjanes"
    },
    {
      "name": "broadlinkjs-sm",
      "descriptions": "A Node.JS library for controlling Broadlink SP & MP devices",
      "keyword": [
        "Broadlink",
        "IoT",
        "remote",
        "control",
        "sp"
      ],
      "author": "smka"
    },
    {
      "name": "bluetooth-terminal",
      "descriptions": "ES6 class for serial communication with Bluetooth Low Energy (Smart) devices",
      "keyword": [
        "ble",
        "bluetooth",
        "bluetooth-low-energy",
        "bluetooth-smart",
        "communication",
        "iot",
        "physical-web",
        "serial",
        "smart"
      ],
      "author": "loginov-rocks"
    },
    {
      "name": "chat-service",
      "descriptions": "An extensible and scalable chat-like messaging server.",
      "keyword": [
        "chat",
        "messaging",
        "IoT",
        "framework",
        "websocket",
        "websockets",
        "service",
        "microservice",
        "cluster"
      ],
      "author": "an-sh"
    },
    {
      "name": "@mdslab/iotronic-lightning-rod",
      "descriptions": "Implementation of the Lightning-rod, the Stack4Things node-side probe (this version works with the standalone version of IoTronic) http://stack4things.unime.it/",
      "keyword": [
        "IoT",
        "Stack4Things",
        "s4t",
        "Cloud",
        "WAMP"
      ],
      "author": "npeditto"
    },
    {
      "name": "evrythng-mqtt",
      "descriptions": "Evrythng.js MQTT plugin for MQTT real-time communication with EVRYTHNG API",
      "keyword": [
        "evrythng",
        "everything",
        "thng",
        "evt",
        "iot",
        "internet of things",
        "wot",
        "web of things",
        "thng-hub",
        "hub",
        "mqtt",
        "thng-scan",
        "scanthng"
      ],
      "author": "evrythng"
    },
    {
      "name": "sensorium",
      "descriptions": "Makeblock mainboards protocol api",
      "keyword": [
        "makeblock",
        "robot",
        "IOT"
      ],
      "author": "tanqiliang"
    },
    {
      "name": "evrythng-hub",
      "descriptions": "Evrythng.js Hub plugin for transparent local Thng-Hub requests",
      "keyword": [
        "evrythng",
        "everything",
        "thng",
        "evt",
        "iot",
        "internet of things",
        "wot",
        "web of things",
        "thng-hub",
        "hub",
        "mqtt",
        "thng-scan",
        "scanthng"
      ],
      "author": "evrythng"
    },
    {
      "name": "enocean-js",
      "descriptions": "Open source java script implementation of the enocean protocol",
      "keyword": [
        "iot",
        "enocean",
        "home",
        "automation",
        "facility",
        "management",
        "smart"
      ],
      "author": "holgerwill"
    },
    {
      "name": "@bifravst/eslint-config-typescript",
      "descriptions": "ESLint config for all Bifravst projects.",
      "keyword": [
        "Cloud",
        "IoT",
        "bifravst",
        "AssetTracker",
        "NordicSemiconductor"
      ],
      "author": "bifravst-ci"
    },
    {
      "name": "mqtt-agent",
      "descriptions": "This is a MQTT Agent",
      "keyword": [
        "mqtt",
        "activemq",
        "iot"
      ],
      "author": "jcanadilla"
    },
    {
      "name": "iotdb-upnp",
      "descriptions": "UPnP controller - standalone or with HomeStar / IOTDB",
      "keyword": [
        "IOTDB",
        "IOT",
        "HomeStar",
        "Universal Plug & Play",
        "UPnP"
      ],
      "author": "dpjanes"
    },
    {
      "name": "@gtiot/iot-client",
      "descriptions": "‰∫ëÁªÑÊÄÅÂπ≥Âè∞ÂâçÁ´Ø",
      "keyword": [
        "iot"
      ],
      "author": "sshwsfc"
    },
    {
      "name": "@tuyapi/link",
      "descriptions": "üì° Effortlessly connect devices to WiFi and the cloud",
      "keyword": [
        "iot",
        "tuya",
        "udp"
      ],
      "author": "codetheweb"
    },
    {
      "name": "ifx_db",
      "descriptions": "IBM Informix bindings for node",
      "keyword": [
        "node",
        "Informix",
        "driver",
        "IoT",
        "asynchronous",
        "synchronous",
        "scalable",
        "enterprise",
        "rasberty",
        "pi",
        "odbc",
        "HCL",
        "IBM"
      ],
      "author": "ifxdb"
    },
    {
      "name": "silk",
      "descriptions": "Silk SDK",
      "keyword": [
        "silk",
        "iot"
      ],
      "author": "mvines"
    },
    {
      "name": "@hap-server/hap-server",
      "descriptions": "Home automation system based on HomeKit.",
      "keyword": [
        "homekit",
        "apple-homekit",
        "iot",
        "hap",
        "hap-nodejs"
      ],
      "author": "samuelthomas2774"
    },
    {
      "name": "silk-cli",
      "descriptions": "Silk Developer CLI",
      "keyword": [
        "cli",
        "silk",
        "iot"
      ],
      "author": "mvines"
    },
    {
      "name": "cylon-beaglebone",
      "descriptions": "Cylon adaptor for the Beaglebone Black single-board computer",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "gpio",
        "i2c",
        "beaglebone"
      ],
      "author": "deadprogram"
    },
    {
      "name": "iotjs-express",
      "descriptions": "Basic reimplementation of Express.js for IoT.js or Node",
      "keyword": [
        "API",
        "REST",
        "RESTful",
        "express",
        "http",
        "httpd",
        "iot",
        "iotjs",
        "iotjs-module",
        "iotjs-supported",
        "mqtt",
        "webservice",
        "WoT"
      ],
      "author": "rzr"
    },
    {
      "name": "bigbang.io",
      "descriptions": "Create real-time applications and devices for the Internet of Things.",
      "keyword": [
        "bigbang",
        "realtime",
        "real-time",
        "websocket",
        "big bang",
        "publish",
        "subscribe",
        "pubsub",
        "socket",
        "iot",
        "internet of things"
      ],
      "author": "tigeba"
    },
    {
      "name": "@eclipse-ditto/ditto-javascript-client-api_1.0-pre",
      "descriptions": "API interfaces for implementing TypeScript clients for Eclipse Ditto 1.0.x.",
      "keyword": [
        "ditto",
        "eclipse",
        "eclipseditto",
        "client",
        "iot",
        "api"
      ],
      "author": "florian.fendt.bosch"
    },
    {
      "name": "node-red-contrib-homematic-rpc",
      "descriptions": "Homematic XML-RPC integration for node-red",
      "keyword": [
        "node-red",
        "homematic",
        "xmlrpc",
        "home automation",
        "iot",
        "flows",
        "xml-rpc"
      ],
      "author": "ljantos"
    },
    {
      "name": "node-red-contrib-google-action-dialogflow-http",
      "descriptions": "A node-red node for interfacing with actions from Google Assistant based on Dialogflow.",
      "keyword": [
        "node-red",
        "android",
        "iot",
        "google"
      ],
      "author": "orcema"
    },
    {
      "name": "node-red-contrib-rf-command",
      "descriptions": "Offers possibility to send a binary code via radio waves. I'm personally using this for controlling different IOT devices by radio.",
      "keyword": [
        "node-red",
        "RF433",
        "wireless",
        "communication",
        "radio",
        "IoT",
        "433 MHz",
        "RF command"
      ],
      "author": "toporjinschi"
    },
    {
      "name": "@thing-it/device-plant-probe",
      "descriptions": "[Thing-it-node] Device Plugin for Plant Probes.",
      "keyword": [
        "IoT",
        "thing-it",
        "Plant",
        "Gardening"
      ],
      "author": "robsman"
    },
    {
      "name": "cylon-neurosky",
      "descriptions": "Cylon module for Neurosky",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "neurosky",
        "mindwave",
        "eeg",
        "brainwave",
        "bci"
      ],
      "author": "deadprogram"
    },
    {
      "name": "@iotize/device-com-ble-common.js",
      "descriptions": "IoTize Device Communication protocol for ble",
      "keyword": [
        "IoTize",
        "IOT",
        "BLE",
        "iotize communication protocol",
        "iotize device",
        "tap device",
        "Bluetooth Low Energy",
        "Chrome"
      ],
      "author": "stephane.leonard"
    },
    {
      "name": "az-iot-bi",
      "descriptions": "Business Intelligence API for Azure IoT Happy Path",
      "keyword": [
        "Azure",
        "IoT",
        "BI"
      ],
      "author": "windowsazure"
    },
    {
      "name": "hologram-node",
      "descriptions": "Holograms API client library for node.js",
      "keyword": [
        "hologram",
        "iot"
      ],
      "author": "ozymandias547"
    },
    {
      "name": "node-red-contrib-mopidy",
      "descriptions": "A Node-RED node to communicate with Mopidy",
      "keyword": [
        "node-red",
        "node-red-contrib",
        "contrib",
        "mopidy",
        "audio",
        "home automation",
        "iot",
        "internet of things"
      ],
      "author": "emiloberg"
    },
    {
      "name": "home-thing",
      "descriptions": "A module for abstracting network communication between smart devices in a home environment.",
      "keyword": [
        "iot",
        "wot",
        "thing"
      ],
      "author": "anskaal"
    },
    {
      "name": "node-red-contrib-blynk-bridge",
      "descriptions": "Blynk integration with node-red with bridging capabilities",
      "keyword": [
        "node-red",
        "blynk",
        "bridge",
        "iot",
        "home-automation"
      ],
      "author": "scaftw"
    },
    {
      "name": "upnp-sub-mqtt",
      "descriptions": "Upnp Subscription to MQTT bridge",
      "keyword": [
        "mqtt",
        "upnp",
        "subscription",
        "iot",
        "event"
      ],
      "author": "bazwilliams"
    },
    {
      "name": "homebridge-blynk",
      "descriptions": "Homebridge plugin for the Blynk platform",
      "keyword": [
        "homebridge-plugin",
        "Blynk",
        "IoT",
        "Siri"
      ],
      "author": "ilcato"
    },
    {
      "name": "nanocyte-configuration-generator",
      "descriptions": "Generate Nanocyte configuration from an Octoblu flow",
      "keyword": [
        "octoblu",
        "meshblu",
        "nanocyte",
        "IoT"
      ],
      "author": "octoblu-user"
    },
    {
      "name": "sigfox-gcloud",
      "descriptions": "Framework for building a Sigfox server, based on Google Cloud Functions",
      "keyword": [
        "sigfox",
        "gcloud",
        "functions",
        "google",
        "cloud",
        "iot"
      ],
      "author": "lupyuen"
    },
    {
      "name": "gecko-ci",
      "descriptions": "A lightweight build monitor for nodejs that handles IoT gadgets and brings CI feedbacks to the real world",
      "keyword": [
        "gecko",
        "gecko-ci",
        "ci",
        "iot",
        "extreme feedback",
        "gadgets",
        "devices",
        "lifx",
        "tfs",
        "team foundation server"
      ],
      "author": "minduca"
    },
    {
      "name": "node-red-contrib-sentilo",
      "descriptions": "A Sentilo/Thingtia platform server nodes collection for node-red",
      "keyword": [
        "node-red",
        "sentilo",
        "thingtia",
        "iot"
      ],
      "author": "sentilo"
    },
    {
      "name": "bitdog-client",
      "descriptions": "Monitor and control your IoT devices.",
      "keyword": [
        "iot",
        "raspberrypi",
        "zwave",
        "home automation",
        "sensor",
        "camera"
      ],
      "author": "bitdog"
    },
    {
      "name": "azure-iot-gateway",
      "descriptions": "Azure IoT Edge Core Runtime.",
      "keyword": [
        "Azure",
        "IoT",
        "Gateway",
        "Edge"
      ],
      "author": "windowsazure"
    },
    {
      "name": "mqtt2opcua",
      "descriptions": "Bi-directional MQTT OPCUA bridge",
      "keyword": [
        "mqtt",
        "opcua",
        "scada",
        "telemetry",
        "iot"
      ],
      "author": "nzfarmer"
    },
    {
      "name": "@mdslab/iotronic-standalone",
      "descriptions": "IoTronic-standalone is the implementation of a personal Cloud to remote manage embedded devices (Arduino YUN/Linino One, Raspberry Pi 2/3, etc)",
      "keyword": [
        "cloud",
        "IoT",
        "Arduino",
        "Raspberry",
        "WAMP",
        "tunnel",
        "reverse",
        "WebSocket"
      ],
      "author": "npeditto"
    },
    {
      "name": "cylon-audio",
      "descriptions": "Cylon module for Audio",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "audio",
        "sound",
        "mp3"
      ],
      "author": "deadprogram"
    },
    {
      "name": "creator-js-client",
      "descriptions": "JS client library for creator device server.",
      "keyword": [
        "iot",
        "lwm2m",
        "creator",
        "rest",
        "client",
        "hateoas",
        "internet of things",
        "coap",
        "creatordev",
        "imagination"
      ],
      "author": "creatordev"
    },
    {
      "name": "cylon-ollie",
      "descriptions": "Cylon module for Ollie",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "ollie",
        "sphero",
        "orbotix",
        "bluetooth",
        "ble",
        "bluetooth le",
        "View more"
      ],
      "author": "deadprogram"
    },
    {
      "name": "json-silo",
      "descriptions": "A contextual data silo for the IoT and the Physical Web. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "IoT",
        "Personal Data Locker",
        "Physical Web",
        "Schema.org",
        "JSON-LD"
      ],
      "author": "reelyactive"
    },
    {
      "name": "smart-pinhole-workshop",
      "descriptions": "A nodeschool workshop to learn how smart (iot) things work.",
      "keyword": [
        "nodeschool",
        "johnny-five",
        "nodebot",
        "internet of things",
        "iot",
        "workshop",
        "workshopper",
        "Pleasure in the work puts perfection in the job",
        "smart devices",
        "cardboardiot",
        "mqtt"
      ],
      "author": "ezodude"
    },
    {
      "name": "iot",
      "descriptions": "Standard IoT API to link everything",
      "keyword": [
        "iot"
      ],
      "author": "fredchien"
    },
    {
      "name": "devify-cli",
      "descriptions": "A cli for for getting started with devify",
      "keyword": [
        "iot",
        "esp8266",
        "isomorphic",
        "boilerplate"
      ],
      "author": "jollen"
    },
    {
      "name": "deadlights",
      "descriptions": "Interface for Flux WiFi RGB light bulbs",
      "keyword": [
        "flux",
        "wifi",
        "magic home",
        "fluxsmartlighting",
        "fluxwifi",
        "iot",
        "rgb",
        "smart home",
        "lightbulb",
        "light",
        "led",
        "bulb"
      ],
      "author": "boneskull"
    },
    {
      "name": "micro-app-notify-client",
      "descriptions": "Client to send notifications though sms and other means",
      "keyword": [
        "iot",
        "mqtt",
        "sms",
        "micro-app"
      ],
      "author": "mhdawson1"
    },
    {
      "name": "thing-node",
      "descriptions": "A Kii enabled IoT library for node.js capable Things",
      "keyword": [
        "iot",
        "cloud",
        "kii",
        "thing"
      ],
      "author": "germanviscuso"
    },
    {
      "name": "node-red-contrib-scriptr-node",
      "descriptions": "A simple implementation of a node-red node that connects to a scriptr.io endpoint.",
      "keyword": [
        "node-red",
        "scriptr.io",
        "iot"
      ],
      "author": "legatoloco"
    },
    {
      "name": "mqtt_mongo",
      "descriptions": "Logs all mqtt topics to mongoDb",
      "keyword": [
        "mqtt",
        "mongoDb",
        "IOT",
        "interent",
        "of",
        "things",
        "automation",
        "logging",
        "events",
        "topics"
      ],
      "author": "bradfordmedeiros"
    },
    {
      "name": "@jonaphael/dojot-module",
      "descriptions": "A library that provides utilities and methods for dojot",
      "keyword": [
        "dojot",
        "iot"
      ],
      "author": "jonaphael"
    },
    {
      "name": "node-server-ar-drone",
      "descriptions": "Fly a Parrot AR Drone 2.0 using REST calls.",
      "keyword": [
        "drone",
        "ardrone",
        "autonomy",
        "autonomousdrone",
        "parrotardrone",
        "REST",
        "fly",
        "iot"
      ],
      "author": "sirarsalih"
    },
    {
      "name": "ableton-push",
      "descriptions": "Interface with the Ableton Push in Meshblu!",
      "keyword": [
        "Meshblu",
        "IoT",
        "Octoblu",
        "Ableton"
      ],
      "author": "loqwai"
    },
    {
      "name": "ifxnjs-aa64",
      "descriptions": "Informix native node.js driver",
      "keyword": [
        "node",
        "Informix",
        "driver",
        "IoT",
        "asynchronous",
        "synchronous",
        "scalable",
        "enterprise",
        "raspberry",
        "pi"
      ],
      "author": "pawanpawar"
    },
    {
      "name": "pipin",
      "descriptions": "Set and read Raspberry Pi GPIO pins, and display pin schematics",
      "keyword": [
        "raspberry-pi",
        "raspberrypi",
        "raspberry pi",
        "iot",
        "gpio"
      ],
      "author": "tstringer"
    },
    {
      "name": "sensorium-server",
      "descriptions": "Http proxy server for connecting web to serialPort",
      "keyword": [
        "sensorium-server",
        "serialPort",
        "IOT",
        "sensor"
      ],
      "author": "jeremy_yang"
    },
    {
      "name": "farm_kernel",
      "descriptions": "Agricultural remote data collection system for the Intel Edison",
      "keyword": [
        "Edison",
        "Intel",
        "johnny-five",
        "iot"
      ],
      "author": "d__run__"
    },
    {
      "name": "serialport-v4",
      "descriptions": "Fork with electron support of Node.js package to access serial ports. Welcome your robotic javascript overlords. Better yet, program them!",
      "keyword": [
        "serialport",
        "johnny-five",
        "serial port",
        "hardware",
        "iot",
        "nodebots"
      ],
      "author": "akajes"
    },
    {
      "name": "bitsandbytes",
      "descriptions": "A simple and light weight framework to decode binary or stream messages.",
      "keyword": [
        "iot",
        "m2m",
        "decode",
        "machine-language",
        "decoder",
        "binary",
        "buffer",
        "protocol",
        "frame",
        "packet",
        "stream",
        "gateway",
        "bits",
        "bytes",
        "View more"
      ],
      "author": "conekt"
    },
    {
      "name": "cylon-mip",
      "descriptions": "Cylon module for MIP",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "mip",
        "wowwee",
        "bluetooth",
        "bluetooth le",
        "ble"
      ],
      "author": "deadprogram"
    },
    {
      "name": "@nec-baas/ssepush-node",
      "descriptions": "BaaS SSEPush Client for Node.js",
      "keyword": [
        "nec",
        "baas",
        "push",
        "sse",
        "iot",
        "mobile"
      ],
      "author": "y-zhounec"
    },
    {
      "name": "node-red-contrib-dalchymia",
      "descriptions": "A ubiquitous dalchymia node for red-node",
      "keyword": [
        "node-red",
        "dalchymia",
        "ubiquitous",
        "iot"
      ],
      "author": "ubiquitous"
    },
    {
      "name": "hivemind-app-cache",
      "descriptions": "Caching layer for app backends based on the Akenza IoT Platform",
      "keyword": [
        "Akenza",
        "Hivemind",
        "IoT"
      ],
      "author": "hivemind-ag"
    },
    {
      "name": "node-red-contrib-kalman",
      "descriptions": "Node-red-contrib-kalman ========================",
      "keyword": [
        "node-red",
        "editor",
        "messaging",
        "iot",
        "m2m",
        "flow",
        "kalman"
      ],
      "author": "syuhei176"
    },
    {
      "name": "vizibles-raspberrypi-examples",
      "descriptions": "Examples to use a Raspberry Pi as vizibles client",
      "keyword": [
        "vizibles",
        "raspberry",
        "iot",
        "internet of things",
        "things"
      ],
      "author": "jamartinez-enxine"
    },
    {
      "name": "node-enocean-lightscene",
      "descriptions": "A lightscene manager for node-enocean",
      "keyword": [
        "lightscene",
        "manager",
        "enocean",
        "home",
        "automation",
        "smart",
        "iot"
      ],
      "author": "holgerwill"
    },
    {
      "name": "thingssdk-cli",
      "descriptions": "Generator for JavaScript microcontroller projects",
      "keyword": [
        "JavaScript",
        "IoT",
        "ESP8266",
        "Espruino"
      ],
      "author": "chalkers"
    },
    {
      "name": "chirpers",
      "descriptions": "JavaScript client for chirpers.io",
      "keyword": [
        "chirpers",
        "IoT"
      ],
      "author": "monteslu"
    },
    {
      "name": "vermon",
      "descriptions": "Formerly the t-motion-detector package, now named vermon",
      "keyword": [
        "server",
        "monitor",
        "iot",
        "raspberry",
        "pi",
        "t-motion-detector",
        "motion"
      ],
      "author": "tcardoso"
    },
    {
      "name": "cylon-keyboard",
      "descriptions": "Cylon module for Keyboard",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "drone",
        "drones",
        "hardware",
        "keyboard"
      ],
      "author": "deadprogram"
    },
    {
      "name": "serverless-qcloud-scf",
      "descriptions": "Provider plugin for the Serverless Framework v1.x which adds support for Qcloud SCF(Serverless Cloud Function).",
      "keyword": [
        "serverless",
        "serverless framework",
        "serverless applications",
        "serverless modules",
        "serverless cloud function",
        "qcloud",
        "qcloud scf",
        "iot",
        "internet of things",
        "serverless.com"
      ],
      "author": "colder"
    },
    {
      "name": "thethingsio-mqtt",
      "descriptions": "MQTT library for thethings.iO endpoint",
      "keyword": [
        "client",
        "theThings",
        "theThings.IO",
        "MQTT",
        "internet of things",
        "IoT"
      ],
      "author": "thethingsio"
    },
    {
      "name": "muzzley-bridge-node",
      "descriptions": "Enables you to connect your own devices to the Muzzley IoT ecosystem",
      "keyword": [
        "muzzley",
        "device",
        "integration",
        "iot",
        "Internet of things",
        "Intel Galileo",
        "Intel Edison"
      ],
      "author": "miguelsousa"
    },
    {
      "name": "homebridge-mqttlightbulb",
      "descriptions": "Homebridge plugin for MQTT Lightbulub",
      "keyword": [
        "homebridge-plugin",
        "MQTT",
        "homekit",
        "Siri",
        "IoT",
        "Lightbulb"
      ],
      "author": "ameeuw"
    },
    {
      "name": "node-red-ddm",
      "descriptions": "A visual tool for wiring the Internet of Things",
      "keyword": [
        "editor",
        "messaging",
        "iot",
        "ibm",
        "flow"
      ],
      "author": "ddm"
    },
    {
      "name": "fortressjs",
      "descriptions": "A Nodejs extremly fast, simple, powerful, modular and secure I/O framework",
      "keyword": [
        "nodejs",
        "js",
        "framework",
        "web",
        "net",
        "http",
        "https",
        "fast",
        "secure",
        "simple",
        "speed",
        "io",
        "iot",
        "rest",
        "View more"
      ],
      "author": "seraum"
    },
    {
      "name": "blecast_tm",
      "descriptions": "BLE thermal monitor",
      "keyword": [
        "iot",
        "ble",
        "thermal"
      ],
      "author": "koron"
    },
    {
      "name": "micro-app-electron-launcher",
      "descriptions": "Launcher for micro-apps using electron",
      "keyword": [
        "micro-app",
        "Electron",
        "IOT"
      ],
      "author": "mhdawson1"
    },
    {
      "name": "microbeessdk",
      "descriptions": "MicroBees NodeJS SDK",
      "keyword": [
        "iot",
        "internet of things",
        "sdk",
        "microbees"
      ],
      "author": "microbees"
    },
    {
      "name": "react-iot",
      "descriptions": "React IoT - Johnny Five React renderer",
      "keyword": [
        "JavaScript",
        "React",
        "ReactDOM",
        "renderer",
        "iot",
        "robotics",
        "johnny-five"
      ],
      "author": "vnovick"
    },
    {
      "name": "cylon-odroid",
      "descriptions": "Cylon Adaptor for Odroid single-board computers",
      "keyword": [
        "odroid",
        "odroidjs",
        "cylon",
        "cylonjs",
        "robot",
        "robotics",
        "iot",
        "gpio"
      ],
      "author": "nigeltiany"
    },
    {
      "name": "@eva-ics/framework",
      "descriptions": "JavaScript Framework for EVA ICS",
      "keyword": [
        "iot",
        "iiot",
        "browser",
        "framework",
        "evaics",
        "eva-ics"
      ],
      "author": "disserman"
    },
    {
      "name": "mqtthook",
      "descriptions": "It is a MQTT version of Webhook for IoT devices.",
      "keyword": [
        "iot",
        "internet-of-things",
        "mqtt",
        "mqtthook",
        "wot",
        "web-of-things",
        "webhook"
      ],
      "author": "evanxd"
    },
    {
      "name": "node-vortex-fork",
      "descriptions": "A library for PrismTech Vortex",
      "keyword": [
        "prismtech",
        "vortex",
        "dds",
        "publish/subscribe",
        "publish",
        "subscribe",
        "iot"
      ],
      "author": "rawley"
    },
    {
      "name": "ioriver",
      "descriptions": "Home automation bridge mainly for IMSE Ultra PLC/BAC",
      "keyword": [
        "imse-ultra",
        "ioriver",
        "iot",
        "telldus"
      ],
      "author": "ovejansson"
    },
    {
      "name": "angular-iot",
      "descriptions": "IoT support for Angular",
      "keyword": [
        "angular",
        "iot",
        "arduino",
        "robotics",
        "raspberry pi"
      ],
      "author": "urish"
    },
    {
      "name": "@torpadev/orpa-node-red",
      "descriptions": "A node-red wrapper for RPA",
      "keyword": [
        "editor",
        "messaging",
        "iot",
        "flow"
      ],
      "author": "shivamadhavan"
    },
    {
      "name": "webthing-iotjs",
      "descriptions": "HTTP Web Thing implementation",
      "keyword": [
        "mozilla",
        "iot",
        "web",
        "thing",
        "webthing",
        "iotjs",
        "iotjs-supported",
        "iotjs-module"
      ],
      "author": "rzr"
    },
    {
      "name": "node-red-contrib-iot-peer",
      "descriptions": "Node-red node for iot-peer",
      "keyword": [
        "node-red",
        "iot-peer",
        "node-red-contrib-iot-peer",
        "iot",
        "iot-cloud"
      ],
      "author": "alexwang2014"
    },
    {
      "name": "aloes-light-handlers",
      "descriptions": "Encode / decode MQTT stream from Devices using Aloes Light protocol",
      "keyword": [
        "IoT",
        "MQTT",
        "Interoperability"
      ],
      "author": "getlarge"
    },
    {
      "name": "pi-lighting-nodebot",
      "descriptions": "Example lighting NodeBot controllable via a web interface for the Raspberry Pi",
      "keyword": [
        "nodebots",
        "robots",
        "IoT",
        "raspberry pi"
      ],
      "author": "nebrius"
    },
    {
      "name": "@accessors-modules/local-storage",
      "descriptions": "A local storage for Accessors (actor-oriented proxies for IoT).",
      "keyword": [
        "accessors",
        "actor",
        "IoT",
        "local storage"
      ],
      "author": "terraswarm"
    },
    {
      "name": "node-mysensor",
      "descriptions": "MySensor serial gateway communication interface for Nodejs",
      "keyword": [
        "mysensor",
        "iot",
        "gateway"
      ],
      "author": "aokihu"
    },
    {
      "name": "@iotize/device-com-websocket.js",
      "descriptions": "IoTize Device Communication protocol for Web Socket",
      "keyword": [
        "IoTize",
        "IOT",
        "websocket",
        "iotize communication protocol",
        "iotize device"
      ],
      "author": "stephane.leonard"
    },
    {
      "name": "replyr",
      "descriptions": "Node.js MQTT client with built-in request and response methods",
      "keyword": [
        "mqtt",
        "iot",
        "socket",
        "websockets",
        "socket.io"
      ],
      "author": "netbeast"
    },
    {
      "name": "phantconfig-gps_files",
      "descriptions": "A custom phant server configuration generated by data.sparkfun.com",
      "keyword": [
        "phant",
        "IoT",
        "SparkFun"
      ],
      "author": "phant"
    },
    {
      "name": "iobroker.discovery",
      "descriptions": "This adapter tries to detect devices in local network.",
      "keyword": [
        "ioBroker",
        "discovery",
        "home automation",
        "iot"
      ],
      "author": "apollon77"
    },
    {
      "name": "phantconfig-qegsstatsd",
      "descriptions": "A custom phant server configuration generated by data.sparkfun.com",
      "keyword": [
        "phant",
        "IoT",
        "SparkFun"
      ],
      "author": "phant"
    },
    {
      "name": "phantconfig-qegs",
      "descriptions": "A custom phant server configuration generated by data.sparkfun.com",
      "keyword": [
        "phant",
        "IoT",
        "SparkFun"
      ],
      "author": "phant"
    },
    {
      "name": "nanocyte-iot-app-publisher",
      "descriptions": "[![Build Status](https://travis-ci.org/octoblu/.svg?branch=master)](https://travis-ci.org/octoblu/) [![Code Climate](https://codeclimate.com/github/octoblu//badges/gpa.svg)](https://codeclimate.com/github/octoblu/) [![Test Coverage](https://codeclimate.co",
      "keyword": [
        "IoT",
        "Meshblu"
      ],
      "author": "octoblu"
    },
    {
      "name": "mqtt-climate",
      "descriptions": "A demonstration of how to use MQTT on Tessel",
      "keyword": [
        "mqtt",
        "tessel",
        "climate",
        "temperature",
        "iot"
      ],
      "author": "technicalmachine"
    },
    {
      "name": "aloes-handlers",
      "descriptions": "Encode / decode MQTT stream from IoT devices to Web browsers.",
      "keyword": [
        "IoT",
        "MQTT",
        "Interoperability"
      ],
      "author": "getlarge"
    },
    {
      "name": "aptables",
      "descriptions": "Broker Framework",
      "keyword": [
        "tables",
        "broker",
        "iot",
        "node",
        "js",
        "app"
      ],
      "author": "chencyr"
    },
    {
      "name": "cylon-api-http",
      "descriptions": "HTTP API add-on module for Cylon.JS",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "api",
        "http"
      ],
      "author": "deadprogram"
    },
    {
      "name": "pico-engine-core",
      "descriptions": "The core javascript api for the pico-engine. (no http, logging, process management etc...)",
      "keyword": [
        "krl",
        "pico-engine",
        "IoT"
      ],
      "author": "farskipper"
    },
    {
      "name": "losant-rest",
      "descriptions": "REST client for accessing the Losant API",
      "keyword": [
        "IoT",
        "platform",
        "api",
        "REST"
      ],
      "author": "eeerin"
    },
    {
      "name": "tiip",
      "descriptions": "TIIP is a wire protocol using JSON as its infoset. It is created for lightweight messaging in IoT solutions. It is loosely defined to support API creation.",
      "keyword": [
        "tiip",
        "IoT",
        "protocol"
      ],
      "author": "whitelizard"
    },
    {
      "name": "advlib",
      "descriptions": "Library for Decoding Wireless Advertising Packets. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "IoT",
        "library",
        "Bluetooth Smart",
        "BLE"
      ],
      "author": "reelyactive"
    },
    {
      "name": "victor-smart-kill",
      "descriptions": "Interface to Victor Smart Kill mousetraps",
      "keyword": [
        "iot",
        "victor",
        "smart",
        "kill",
        "mousetrap"
      ],
      "author": "dwwkelly"
    },
    {
      "name": "serialport-gsm",
      "descriptions": "Serialport implementation for GSM commands (send text/flash messages, read, etc.)",
      "keyword": [
        "gsm",
        "at",
        "commands",
        "modem",
        "sms",
        "iot",
        "serial port",
        "serialport",
        "serial",
        "com",
        "port",
        "flash message",
        "class 0"
      ],
      "author": "zabsalahid"
    },
    {
      "name": "thingjs-io",
      "descriptions": "Read and write pins on a dev board.",
      "keyword": [
        "device",
        "gpio",
        "iot",
        "linkit",
        "maker",
        "raspberry-pi",
        "thingjs"
      ],
      "author": "evanxd"
    },
    {
      "name": "@iotize/device-ext-tapnpass.js",
      "descriptions": "Extras features for TapNPass device",
      "keyword": [
        "Tap Device",
        "Extra features",
        "IoTize",
        "IOT",
        "TapNLink",
        "TapNPass"
      ],
      "author": "stephane.leonard"
    },
    {
      "name": "cayennelpp-handlers",
      "descriptions": "Encode / decode MQTT stream from Devices using CayenneLPP protocol",
      "keyword": [
        "IoT",
        "MQTT",
        "LoraWAN",
        "CayennneLPP",
        "Interoperability"
      ],
      "author": "getlarge"
    },
    {
      "name": "mysensors-handlers",
      "descriptions": "Encode / decode MQTT stream from Devices using MySensors protocol",
      "keyword": [
        "IoT",
        "MQTT",
        "MySensors",
        "Interoperability"
      ],
      "author": "getlarge"
    },
    {
      "name": "@c8y/cli",
      "descriptions": "CLI tool for Cumulocity IoT applications",
      "keyword": [
        "Cumulocity",
        "IoT",
        "m2m",
        "cli",
        "tools"
      ],
      "author": "c8y"
    },
    {
      "name": "nitrogen-sensor",
      "descriptions": "This module adds support for sensorCommand messages to a Nitrogen application or service. It also provides the SensorManager class for interpreting message streams and driving the attached device.",
      "keyword": [
        "devices",
        "iot",
        "nitrogen"
      ],
      "author": "tpark"
    },
    {
      "name": "phant-output-mqtt",
      "descriptions": "Mqtt output for phant",
      "keyword": [
        "data",
        "phant",
        "IoT",
        "MQTT"
      ],
      "author": "toddtreece"
    },
    {
      "name": "gpio-in-domapic",
      "descriptions": "Handler to be used by Domapic modules for controlling a gpio in \"in\" mode",
      "keyword": [
        "domapic",
        "raspberry",
        "gpio",
        "iot",
        "domotic"
      ],
      "author": "javierbrea"
    },
    {
      "name": "iobroker.email",
      "descriptions": "Send e-mails from ioBroker",
      "keyword": [
        "ioBroker",
        "email",
        "home automation",
        "IoT"
      ],
      "author": "apollon77"
    },
    {
      "name": "cylon-firmata",
      "descriptions": "Cylon module for Arduino and other microcontrollers using the Firmata protocol",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "gpio",
        "i2c",
        "firmata",
        "arduino",
        "curie",
        "arduino101"
      ],
      "author": "deadprogram"
    },
    {
      "name": "m2m",
      "descriptions": "M2m is a client module for machine-to-machine communication system framework node-m2m.",
      "keyword": [
        "bcm2835",
        "gpio",
        "pi",
        "raspberry",
        "raspberrypi",
        "raspberry pi",
        "raspberry pi 3",
        "rpi",
        "rpio",
        "onoff",
        "pwm",
        "i2c",
        "spi",
        "m2m",
        "View more"
      ],
      "author": "edolabworks"
    },
    {
      "name": "fiix-cmms-client",
      "descriptions": "Fiix CMMS Javascript Client",
      "keyword": [
        "api",
        "sdk",
        "cmms",
        "iot",
        "maintenance assistant",
        "fiix"
      ],
      "author": "fiix"
    },
    {
      "name": "gpio-out-domapic",
      "descriptions": "Handler to be used by Domapic modules for controlling a gpio in \"out\" mode",
      "keyword": [
        "domapic",
        "raspberry",
        "gpio",
        "iot",
        "domotic"
      ],
      "author": "javierbrea"
    },
    {
      "name": "@agilatech/bme280",
      "descriptions": "Use either I2C or SPI to drive the Bosch BME280 Pressure / Temperature / Humidity sensor",
      "keyword": [
        "bme280",
        "sensor",
        "temperature",
        "pressure",
        "humidity",
        "barometer",
        "iot",
        "i2c",
        "spi",
        "beaglebone",
        "raspi",
        "rpi",
        "raspberry",
        "pi"
      ],
      "author": "scotty"
    },
    {
      "name": "itmpws",
      "descriptions": "Itmp client for websocket in browser",
      "keyword": [
        "itmp",
        "iot",
        "ws"
      ],
      "author": "neolp"
    },
    {
      "name": "bravia",
      "descriptions": "Node.js module for discovering and controlling Sony BRAVIA Android TVs",
      "keyword": [
        "sony",
        "bravia",
        "tv",
        "iot",
        "android",
        "androidtv"
      ],
      "author": "waynehaffenden"
    },
    {
      "name": "@c8y/style",
      "descriptions": "Styles for Cumulocity IoT applications",
      "keyword": [
        "Cumulocity",
        "IoT",
        "m2m",
        "Branding",
        "Style",
        "CSS",
        "less"
      ],
      "author": "c8y"
    },
    {
      "name": "mnubo-sdk",
      "descriptions": "Mnubo SmartObjects JavaScript client",
      "keyword": [
        "mnubo",
        "api",
        "sdk",
        "javascript",
        "typescript",
        "iot",
        "smartobject"
      ],
      "author": "mnuboci"
    },
    {
      "name": "wapp-api",
      "descriptions": "Helper functions to speed up wapp development process.",
      "keyword": [
        "wappsto",
        "wapp",
        "wapp-api",
        "iot",
        "api"
      ],
      "author": "seluxit_developer"
    },
    {
      "name": "@iotize/firmware-update-provider.js",
      "descriptions": "IoTize Device client for Javascript",
      "keyword": [
        "IoTize Device Client API",
        "IoTize",
        "IOT"
      ],
      "author": "stephane.leonard"
    },
    {
      "name": "node-beacon-scanner-duplicates-check",
      "descriptions": "The node-beacon-scanner is a Node.js module which allows you to scan BLE beacon packets and parse the packet data. This module supports iBeacon, Eddystone, and Estimote.",
      "keyword": [
        "Eddystone",
        "iBeacon",
        "Estimote",
        "BLE",
        "Bluetooth Low Energy",
        "Bluetooth smart",
        "Bluetooth",
        "IoT",
        "Internet of Things"
      ],
      "author": "joeldavidw"
    },
    {
      "name": "@iotize/device-extras.js",
      "descriptions": "Extras features for IoTize Tap Device API",
      "keyword": [
        "Tap Device",
        "Extra features",
        "IoTize",
        "IOT",
        "TapNLink",
        "TapNPass"
      ],
      "author": "stephane.leonard"
    },
    {
      "name": "tessel-io",
      "descriptions": "Tessel 2 IO Plugin for Johnny-Five JavaScript Robotics",
      "keyword": [
        "Tessel",
        "IoT",
        "Tessel 2",
        "Arduino",
        "Edison",
        "Particle"
      ],
      "author": "rwaldron"
    },
    {
      "name": "broadlink",
      "descriptions": "Library to communicate with Broadlink devices",
      "keyword": [
        "broadlink",
        "iot"
      ],
      "author": "freelancedeveloper"
    },
    {
      "name": "@c8y/apps",
      "descriptions": "Cumulocity IoT applications",
      "keyword": [
        "Cumulocity",
        "IoT",
        "m2m",
        "Apps",
        "Application"
      ],
      "author": "c8y"
    },
    {
      "name": "smart-house-backend",
      "descriptions": "Smart House BE",
      "keyword": [
        "express",
        "node",
        "node.js",
        "mongodb",
        "mongoose",
        "es6",
        "mocha",
        "istanbul",
        "REST",
        "API",
        "smart",
        "house",
        "IoT"
      ],
      "author": "borys.ihnatyev"
    },
    {
      "name": "iopa-http",
      "descriptions": "API-first Hypertext Transfer Protocol (HTTP) transport for the Internet of Things (IoT), based on the Internet of Protocols Alliance (IOPA) specification",
      "keyword": [
        "iot",
        "iotivity",
        "IOT",
        "IOPA",
        "microservices",
        "limerun",
        "iopa",
        "owin",
        "middleware",
        "node-coap",
        "iopa-coap",
        "http",
        "app",
        "demo",
        "View more"
      ],
      "author": "iopa"
    },
    {
      "name": "spacebunny",
      "descriptions": "NodeJS client library for Space Bunny IoT platform",
      "keyword": [
        "spacebunny",
        "iot"
      ],
      "author": "spacebunny"
    },
    {
      "name": "meshblu-core-task-search-device",
      "descriptions": "Search for devices, using the unstoppable Meshblu CORE",
      "keyword": [
        "meshblu",
        "IoT",
        "octoblu"
      ],
      "author": "octoblu"
    },
    {
      "name": "sniffypedia",
      "descriptions": "An open, collaborative lookup of radio-identifiable (sniffable) things, represented as structured data. We believe in an open Internet of Things.",
      "keyword": [
        "reelyActive",
        "BLE",
        "IoT",
        "Auto-ID",
        "identification",
        "associations",
        "linked data",
        "semantic web"
      ],
      "author": "reelyactive"
    },
    {
      "name": "bigml-nodered-core",
      "descriptions": "BigML bindings for Node-RED",
      "keyword": [
        "Node-RED",
        "IoT",
        "ML",
        "bindings",
        "BigML",
        "Machine Learning"
      ],
      "author": "bigml"
    },
    {
      "name": "node-linking",
      "descriptions": "The node-linking is a Node.js module which allows you to communicate with the BLE devices supporting the Linking Profile developed by Linking Project (NTT DoCoMo) in Japan.",
      "keyword": [
        "Linking",
        "BLE",
        "Bluetooth Low Energy",
        "Bluetooth smart",
        "Bluetooth",
        "IoT",
        "Internet of Things"
      ],
      "author": "futomi"
    },
    {
      "name": "json.filed",
      "descriptions": "Framework for processing of JSON file",
      "keyword": [
        "file",
        "json",
        "deferred processing",
        "framework",
        "IoT"
      ],
      "author": "7k8m"
    },
    {
      "name": "yeelight-awesome",
      "descriptions": "The node.js client api to control yeelight device over WIFI",
      "keyword": [
        "IoT",
        "Smart Light",
        "Yeelight"
      ],
      "author": "samuraitruong"
    },
    {
      "name": "thor-io.vnext",
      "descriptions": "Thor-io.vnext represents the next generation of thor-io.Thor-IO is a fundament for stateful real-time communication.TCP/IP,WebSockets & WebRTC or whatever you need and desire.",
      "keyword": [
        "Unity",
        ".NET",
        "Realtime",
        "WebSockets",
        "WebRTC",
        "PubSub",
        "RPS",
        "Smart-RPC",
        "IoT",
        "NodeJS",
        "RTC",
        "Typescript"
      ],
      "author": "magnusthor"
    },
    {
      "name": "klf-200-api",
      "descriptions": "This module provides a wrapper to the socket API of a Velux KLF-200 interface. You will need at least firmware 0.2.0.0.71 on your KLF interface for this library to work.",
      "keyword": [
        "klf-200",
        "IoT"
      ],
      "author": "mischroe"
    },
    {
      "name": "@lightelligence/browser-sdk",
      "descriptions": "Javascript SDK for the lightelligence-platform",
      "keyword": [
        "osram",
        "lightelligence",
        "iot",
        "browser",
        "sdk"
      ],
      "author": "lightelligence-team"
    },
    {
      "name": "serverless-google-cloudfunctions-awesome",
      "descriptions": "Provider plugin for the Serverless Framework v1.x which adds support for Google Cloud Functions.",
      "keyword": [
        "serverless",
        "serverless framework",
        "serverless applications",
        "serverless modules",
        "google cloud functions",
        "iot",
        "internet of things",
        "serverless.com"
      ],
      "author": "felexx90"
    },
    {
      "name": "cylon-leapmotion",
      "descriptions": "Cylon module for the Leap Motion",
      "keyword": [
        "cylon",
        "cylonjs",
        "cylons",
        "robot",
        "robots",
        "robotics",
        "iot",
        "hardware",
        "leap",
        "leap motion",
        "leapmotion"
      ],
      "author": "deadprogram"
    }
  ]
}
